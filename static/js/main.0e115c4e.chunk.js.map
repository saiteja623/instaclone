{"version":3,"sources":["instaclone/comment.png","instaclone/empty.png","instaclone/post.png","instaclone/friend-request.png","instaclone/common.jsx","instaclone/contextapi.jsx","instaclone/unfriendalert.jsx","instaclone/Nav.jsx","instaclone/morevert.jsx","instaclone/cardheader.jsx","instaclone/likes.jsx","instaclone/comments.jsx","instaclone/post.jsx","instaclone/posts.jsx","instaclone/suggestions.jsx","instaclone/likesfull.jsx","instaclone/commentsfull.jsx","instaclone/postimagefull.jsx","instaclone/postsinmobile.jsx","instaclone/home.jsx","instaclone/postimage.jsx","instaclone/profile.jsx","instaclone/uploadpost.jsx","instaclone/friendreqcard.jsx","instaclone/friendrequests.jsx","instaclone/bottomnav.jsx","instaclone/register.jsx","instaclone/route.jsx","index.js"],"names":["module","exports","getToken","localStorage","getItem","removeToken","removeItem","getUsername","ContextApi","createContext","Context","state","posts","userdetails","user","userposts","images","post","num_of_posts","num_of_friends","suggestions","requests","isopen3","componentDidMount","getuserProfile","getPosts","get_suggestions","get_requests","increaseLikes","id","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","setRequestHeader","send","addComment","comment","decreaseLikes","deleteComment","savePost","unsavePost","unsendRequest","username","sendRequest","removeFriend","res","setState","Provider","value","this","increaseLike","decreaseLike","updatePosts","loginuser","props","children","Component","UnfriendAlert","Consumer","objecct","Dialog","fullWidth","className","DialogContent","Grid","container","direction","alignItems","justify","spacing","item","xs","style","minWidth","textAlign","Avatar","src","image","width","height","margin","action","Typography","variant","Divider","dividers","borderRight","cursor","onClick","handleClose","unsend","unfriend","color","logout","AppNav","isopen","users","searchres","clicked","handleLogOut","logoutUser","history","push","getUsers","e","target","console","log","object","AppBar","position","Toolbar","sm","Hidden","smDown","TextField","size","placeholder","onChange","inputRef","inputref","InputProps","startAdornment","InputAdornment","marginTop","opacity","endAdornment","fontSize","onBlur","length","indexOf","bottm","left","overflow","background","minHeight","maxHeight","map","CardHeader","avatar","title","component","Link","to","textDecoration","subheader","padding","paddingLeft","ButtonGroup","Button","border","Tooltip","alt","disableRipple","Badge","badgeContent","max","withRouter","MoreVert","snackbarOpen","unfriendAlertOpen","handleUnfriendAlert","deletePost","maxWidth","onClose","List","ListItem","button","divider","ListItemText","text","onCopy","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","CardHead","isrequested","friend","alertDialogOpen","owner","verticalAlign","nickname","xsDown","smUp","top","transform","right","textTransform","fontWeight","Likes","liked","AOS","init","duration","DialogTitle","paddingTop","IconButton","Comments","popupOpen","anchorEl","comments","repeat","handlePopOver","currentTarget","getComments","componentDidUpdate","async","padddingLeft","Popover","transformOrigin","require","heigt","Post","likeChecked","activestep","likes","isBookmarked","caption","figcaption","isDialogopen","commentsDialogOpen","likesDialogOpen","childref","animation","display","handleLikes","handleComment","handleCommentDialog","handleLikesDialog","checkForSave","checkForLike","handledialogClick","setlikeAnimation","setTimeout","child","React","createRef","input","Card","teXtaAlign","profilepic","index","enableMouseEvents","objectFit","onDoubleClick","MobileStepper","steps","backButton","disabled","disableTouchRipple","borderRadius","nextButton","CardActions","disableSpacing","Checkbox","icon","checkedIcon","name","checked","current","focus","bottom","CardContent","ref","Posts","loading","setLoadingFalse","Skeleton","CardMedia","CardActionArea","marginLeft","Paper","marginBottom","key","Suggestions","elevetion","elevation","paddingBottom","overflowY","scrollbarWidth","LikesFull","getLikes","fullScreen","closeDialog","lineHeight","CircularProgress","CommentsFull","newComment","type","PostImageFull","isLiked","MoreDialogOpen","handleCommentsDialog","handleMoreDialog","PostInMobile","list","Home","md","minwidth","PostImage","myinp","dialogClose","overflowX","Profile","photos","bioDialogOpen","profileDialogOpen","newBio","friendsDialogOpen","PostImageDialog","tabsValue","newProfilePic","newBioChanged","usernameChanged","nicknameChanged","emailChanged","activedetails","saved","friendsList","activefriend","newProfilePic1","profilepic2","errorOpen","getrandomProfile","getSavedPosts","getFriendsList","checkForFriend","match","params","setDetails","handleBioDialog","handleProfileDialog","handleNewBio","handleFriendsDialog","handlePostImageDialog","handleNewProfilePic","freader","FileReader","files","readAsDataURL","onloadend","event","result","handleTabs","newValue","handleUnfreind","submitNewProfile","formdata","FormData","append","usernameRef","toLowerCase","nicknameRef","emailRef","email","whiteSpace","dangerouslySetInnerHTML","__html","desc","Tabs","Tab","label","data-aos","multiline","rows","rowsMax","defaultValue","DialogActions","Collapse","in","Alert","severity","helperText","accept","d","edge","alert","UploadPost","currentFile","imageList","successdialogopen","handleFile","handleCaption","uploadImages","i","multiple","FriendReqCard","accepted","declined","acceptRequest","deleteRequest","FriendRequest","friendrequests","BottomNav","Register","msg","showpassword1","showpassword2","isopen2","showpassword3","password","registerusername","pass1","pass2","registerstep","otp","loginstep","newotp","recoverusername","registerUser","pass1Ref","pass2Ref","body","stringify","disappearAlert","token","setItem","changetoLogin","changetoSignUp","checkEmail","includes","verifyOTP","otpRef","sendOTP","recoverusernameRef","verifyrecoverOTP","newOTPRef","changepassword","newpassRef","axis","slideCount","animateHeight","justifyContent","Stepper","activeStep","alternativeLabel","Step","StepLabel","required","ssize","Visibility","VisibilityOff","alignContent","AccountCircle","Lock","Routing","userimage","basename","window","location","pathname","path","render","exact","zIndex","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0e115c4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/comment.01cfa647.png\";","module.exports = __webpack_public_path__ + \"static/media/empty.bf6582ea.png\";","module.exports = __webpack_public_path__ + \"static/media/post.d4d4dc3f.png\";","module.exports = __webpack_public_path__ + \"static/media/friend-request.f4e6aca4.png\";","import React, { Component } from \"react\";\r\n\r\n//get token from localstorage\r\nexport const getToken = () => {\r\n  var token = localStorage.getItem(\"token\");\r\n  return token;\r\n};\r\n\r\n//set token to localstorage from login\r\nexport const setToken = (token, user) => {\r\n  localStorage.setItem(\"token\", token);\r\n  localStorage.setItem(\"user\", user);\r\n};\r\n\r\n//remove token on logout\r\nexport const removeToken = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\n//get user name\r\nexport const getUsername = () => {\r\n  var name = localStorage.getItem(\"user\");\r\n  return name;\r\n};\r\n","import React, { Component, createContext } from \"react\";\r\nimport { getToken } from \"./common\";\r\nexport const ContextApi = createContext();\r\n\r\nexport class Context extends Component {\r\n  state = {\r\n    posts: [],\r\n    userdetails: {\r\n      user: \"\",\r\n    },\r\n    userposts: [\r\n      {\r\n        images: [],\r\n        post: {},\r\n      },\r\n    ],\r\n    num_of_posts: \"\",\r\n    num_of_friends: \"\",\r\n    suggestions: [],\r\n    requests: 0,\r\n    isopen3: false,\r\n  };\r\n  componentDidMount = () => {\r\n    this.getuserProfile();\r\n    this.getPosts();\r\n    this.get_suggestions();\r\n    this.get_requests();\r\n  };\r\n  increaseLikes = (id) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/increaseLikes1${id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  addComment = (id, comment) => {\r\n    var xhr = new XMLHttpRequest();\r\n\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/save_comments1${id}${comment}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  decreaseLikes = (id) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/decreaseLikes1${id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  deleteComment = (id) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/delete_comments1${id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  savePost = (id) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/save_post${id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  unsavePost = (id) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/unsave_post${id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  unsendRequest = (username) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/unsend_request1${username}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  sendRequest = (username) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/send_request1${username}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  removeFriend = (username) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/remove_friend1${username}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  getPosts = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", \"https://saiteja0413.pythonanywhere.com/api/getPosts\", true);\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n\r\n        this.setState({ posts: res[\"posts\"] });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  getuserProfile = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/getprofile`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        this.setState({\r\n          userdetails: res[\"userdata\"],\r\n          userposts: res[\"details\"],\r\n          num_of_posts: res[\"num_of_posts\"],\r\n          num_of_friends: res[\"num_of_friends\"],\r\n        });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  get_suggestions = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"GET\",\r\n      `https://saiteja0413.pythonanywhere.com/api/get_suggestions`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        this.setState({\r\n          suggestions: res[\"suggestions\"],\r\n        });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  get_requests = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"GET\",\r\n      `https://saiteja0413.pythonanywhere.com/api/get__numof_requests`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        this.setState({\r\n          requests: res[\"requests\"],\r\n        });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ContextApi.Provider\r\n        value={{\r\n          posts: this.state.posts,\r\n          increaseLike: this.increaseLikes,\r\n          decreaseLike: this.decreaseLikes,\r\n          deleteComment: this.deleteComment,\r\n          addComment: this.addComment,\r\n          savePost: this.savePost,\r\n          unsavePost: this.unsavePost,\r\n          userdetails: this.state.userdetails,\r\n          userposts: this.state.userposts,\r\n          num_of_friends: this.state.num_of_friends,\r\n          num_of_posts: this.state.num_of_posts,\r\n          updatePosts: this.getPosts,\r\n          suggestions: this.state.suggestions,\r\n          sendRequest: this.sendRequest,\r\n          unsendRequest: this.unsendRequest,\r\n          removeFriend: this.removeFriend,\r\n          requests: this.state.requests,\r\n          loginuser: this.loginuser,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ContextApi.Provider>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Grid,\r\n  Avatar,\r\n  Typography,\r\n  DialogContent,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport \"./css/profile.css\";\r\nimport { ContextApi } from \"./contextapi\";\r\n\r\nclass UnfriendAlert extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <ContextApi.Consumer>\r\n        {(objecct) => {\r\n          return (\r\n            <Dialog open={this.props.open} fullWidth className=\"unfriend-alert\">\r\n              <DialogContent>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  alignItems=\"center\"\r\n                  justify=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs\r\n                    style={{\r\n                      minWidth: \"100%\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    <Avatar\r\n                      src={`https://saiteja0413.pythonanywhere.com${this.props.image}`}\r\n                      style={{\r\n                        width: \"50px\",\r\n                        height: \"50px\",\r\n                        margin: \"0px auto\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item style={{ textAlign: \"center\" }}>\r\n                    {this.props.action !== \"logout\" && (\r\n                      <Typography variant=\"body1\">\r\n                        Are you sure you want to{\" \"}\r\n                        {this.props.action === \"unsend\"\r\n                          ? \"unsend friend request to \"\r\n                          : \"unfriend \"}\r\n                        {this.props.username}\r\n                      </Typography>\r\n                    )}\r\n                    {this.props.action === \"logout\" && (\r\n                      <Typography variant=\"body1\">\r\n                        <strong>{this.props.username}</strong>, Are you sure you\r\n                        want to logout ?\r\n                      </Typography>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs style={{ minWidth: \"100%\" }}>\r\n                    <Divider />\r\n                  </Grid>\r\n\r\n                  <Grid item container dividers>\r\n                    <Grid\r\n                      item\r\n                      xs\r\n                      style={{\r\n                        borderRight: \"solid 1px black\",\r\n                        textAlign: \"center\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={this.props.handleClose}\r\n                    >\r\n                      <Typography> Cancel </Typography>\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      xs\r\n                      style={{ textAlign: \"center\", cursor: \"pointer\" }}\r\n                      onClick={\r\n                        this.props.action == \"unsend\"\r\n                          ? this.props.unsend\r\n                          : this.props.unfriend\r\n                      }\r\n                    >\r\n                      {this.props.action !== \"logout\" && (\r\n                        <Typography color=\"secondary\">\r\n                          {this.props.action === \"unsend\"\r\n                            ? \"unsend\"\r\n                            : \"unfriend \"}\r\n                        </Typography>\r\n                      )}\r\n                      {this.props.action === \"logout\" && (\r\n                        <Typography\r\n                          color=\"secondary\"\r\n                          onClick={this.props.logout}\r\n                        >\r\n                          Logout\r\n                        </Typography>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </DialogContent>\r\n            </Dialog>\r\n          );\r\n        }}\r\n      </ContextApi.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnfriendAlert;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Grid,\r\n  Typography,\r\n  Hidden,\r\n  Avatar,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n  ButtonGroup,\r\n  InputAdornment,\r\n  Divider,\r\n  Button,\r\n  Badge,\r\n  CardHeader,\r\n} from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport \"./css/profile.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport UnfriendAlert from \"./unfriendalert\";\r\nimport \"./css/route.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { getToken, removeToken, getUsername } from \"./common\";\r\n\r\nclass AppNav extends Component {\r\n  state = {\r\n    isopen: false,\r\n    users: [],\r\n    searchres: \"\",\r\n    clicked: false,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  handleLogOut = () => {\r\n    this.setState({ isopen: !this.state.isopen });\r\n  };\r\n  logoutUser = () => {\r\n    this.handleLogOut();\r\n    removeToken();\r\n    this.props.history.push(\"/register\");\r\n  };\r\n  getUsers = (e) => {\r\n    this.setState({ searchres: e.target.value });\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"GET\",\r\n      `https://saiteja0413.pythonanywhere.com/api/get_users/?search=${e.target.value}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        console.log(res);\r\n        this.setState({ users: res });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  render() {\r\n    return (\r\n      <ContextApi.Consumer>\r\n        {(object) => {\r\n          return (\r\n            <>\r\n              <AppBar position=\"sticky\" className=\"nav\">\r\n                <Toolbar>\r\n                  <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      sm\r\n                      style={{ textAlign: \"center\" }}\r\n                      className=\"insta-title\"\r\n                    >\r\n                      Instagram\r\n                    </Grid>\r\n                    <Hidden smDown>\r\n                      <Grid item xs style={{ position: \"relative\" }}>\r\n                        <TextField\r\n                          variant=\"filled\"\r\n                          size=\"small\"\r\n                          style={{ color: \"white\" }}\r\n                          placeholder=\"Search users\"\r\n                          onChange={(e) => {\r\n                            this.getUsers(e);\r\n                          }}\r\n                          inputRef={this.inputref}\r\n                          InputProps={{\r\n                            startAdornment: (\r\n                              <InputAdornment position=\"start\">\r\n                                <SearchIcon\r\n                                  size=\"small\"\r\n                                  style={{ marginTop: \"4px\", opacity: 0.5 }}\r\n                                />\r\n                              </InputAdornment>\r\n                            ),\r\n                            endAdornment: this.state.searchres !== \"\" && (\r\n                              <InputAdornment position=\"end\">\r\n                                <CloseIcon\r\n                                  size=\"small\"\r\n                                  style={{\r\n                                    marginTop: \"10px\",\r\n                                    fontSize: \"1rem\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    if (this.state.clicked) {\r\n                                      this.setState({ searchres: \"\" });\r\n                                    }\r\n                                  }}\r\n                                />\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                          onBlur={() => {\r\n                            this.setState({ searchres: \"\" });\r\n                          }}\r\n                        />\r\n                        {this.state.users.length !== 0 &&\r\n                          this.state.searchres !== \"\" &&\r\n                          this.state.searchres.indexOf(\" \") !== 0 && (\r\n                            <div\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                bottm: 0,\r\n                                left: 0,\r\n                                overflow: \"hidden\",\r\n                                background: \"white\",\r\n                                minHeight: \"0px\",\r\n                                maxHeight: \"130px\",\r\n                                width: \"256px\",\r\n                              }}\r\n                            >\r\n                              {this.state.users.map((e) => (\r\n                                <>\r\n                                  <CardHeader\r\n                                    avatar={\r\n                                      <Avatar\r\n                                        style={{\r\n                                          width: \"26px\",\r\n                                          height: \"26px\",\r\n                                        }}\r\n                                        src={`e[\"image\"]`}\r\n                                      />\r\n                                    }\r\n                                    title={\r\n                                      <Typography\r\n                                        variant=\"body2\"\r\n                                        style={{ color: \"black\" }}\r\n                                        component={Link}\r\n                                        to={`/otheruser/${e[\"user\"][\"username\"]}`}\r\n                                        style={{\r\n                                          color: \"black\",\r\n                                          textDecoration: \"none\",\r\n                                        }}\r\n                                        onMouseDown={() => {\r\n                                          this.props.history.push(\r\n                                            `/otheruser/${e[\"user\"][\"username\"]}`\r\n                                          );\r\n                                        }}\r\n                                      >\r\n                                        {e[\"user\"][\"username\"]}{\" \"}\r\n                                      </Typography>\r\n                                    }\r\n                                    subheader={\r\n                                      <Typography\r\n                                        variant=\"subtitle2\"\r\n                                        color=\"textSecondary\"\r\n                                      >\r\n                                        {e[\"name\"]}\r\n                                      </Typography>\r\n                                    }\r\n                                    style={{\r\n                                      margin: \"2px 0px\",\r\n\r\n                                      height: \"40px\",\r\n                                      padding: \"4px\",\r\n                                      paddingLeft: \"8px\",\r\n                                    }}\r\n                                  />\r\n                                  <Divider />\r\n                                </>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                      </Grid>\r\n                    </Hidden>\r\n                    <Hidden smDown>\r\n                      <ButtonGroup size=\"small\">\r\n                        <Button\r\n                          component={Link}\r\n                          to=\"/\"\r\n                          style={{ border: \"none\" }}\r\n                        >\r\n                          <Tooltip title=\"Home\">\r\n                            <HomeIcon />\r\n                          </Tooltip>\r\n                        </Button>\r\n                        <Button\r\n                          component={Link}\r\n                          to={`/profile/${getUsername()}`}\r\n                          style={{ border: \"none\" }}\r\n                        >\r\n                          <Tooltip title=\"Profile\">\r\n                            <Avatar\r\n                              src={`https://saiteja0413.pythonanywhere.com${object[\"userdetails\"][\"image\"]}`}\r\n                              style={{ width: \"27px\", height: \"27px\" }}\r\n                              alt={object[\"userdetails\"][\"user\"][\"username\"]}\r\n                            ></Avatar>\r\n                          </Tooltip>\r\n                        </Button>\r\n                        <Button\r\n                          component={Link}\r\n                          to=\"/add-post\"\r\n                          style={{ border: \"none\" }}\r\n                          disableRipple\r\n                        >\r\n                          <Tooltip title=\"add  post\">\r\n                            <AddBoxIcon />\r\n                          </Tooltip>\r\n                        </Button>\r\n                        <Button\r\n                          style={{ border: \"none\" }}\r\n                          component={Link}\r\n                          to=\"/friend-requests\"\r\n                        >\r\n                          <Tooltip title=\"Friend requests\">\r\n                            <Badge\r\n                              badgeContent={object[\"requests\"]}\r\n                              color=\"secondary\"\r\n                              fontSize=\"small\"\r\n                              max={10}\r\n                            >\r\n                              <GroupIcon />\r\n                            </Badge>\r\n                          </Tooltip>\r\n                        </Button>\r\n                        <Button style={{ border: \"none\" }}>\r\n                          <Tooltip title=\"Log Out\">\r\n                            <ExitToAppIcon\r\n                              style={{ cursor: \"pointer\" }}\r\n                              onClick={this.handleLogOut}\r\n                            />\r\n                          </Tooltip>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Hidden>\r\n                  </Grid>\r\n                </Toolbar>\r\n              </AppBar>\r\n              <UnfriendAlert\r\n                open={this.state.isopen}\r\n                handleClose={this.handleLogOut}\r\n                image={object[\"userdetails\"][\"image\"]}\r\n                username={object[\"userdetails\"][\"user\"][\"username\"]}\r\n                logout={() => {\r\n                  this.logoutUser();\r\n                }}\r\n                action=\"logout\"\r\n              />\r\n            </>\r\n          );\r\n        }}\r\n      </ContextApi.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AppNav);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  List,\r\n  ListItemText,\r\n  Snackbar,\r\n  ListItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport UnfriendAlert from \"./unfriendalert\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport { getToken, getUsername } from \"./common\";\r\n\r\nclass MoreVert extends Component {\r\n  state = {\r\n    snackbarOpen: false,\r\n    unfriendAlertOpen: false,\r\n  };\r\n  handleUnfriendAlert = () => {\r\n    this.setState({ unfriendAlertOpen: !this.state.unfriendAlertOpen });\r\n  };\r\n  deletePost = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"DELETE\",\r\n      `https://saiteja0413.pythonanywhere.com/api/deletePost1${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContextApi.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <>\r\n                <Dialog\r\n                  fullWidth\r\n                  maxWidth=\"xs\"\r\n                  onClose={this.props.handleClose}\r\n                  open={this.props.open}\r\n                >\r\n                  <DialogContent style={{ padding: 0 }}>\r\n                    <List\r\n                      alignItems=\"center\"\r\n                      style={{\r\n                        padding: 0,\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      <ListItem button divider onClick={this.props.handleClose}>\r\n                        {this.props.username !== getUsername() && (\r\n                          <ListItemText onClick={this.handleUnfriendAlert}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              <span style={{ color: \"red\" }}>Unfriend</span>\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        )}\r\n                        {this.props.username === getUsername() && (\r\n                          <ListItemText\r\n                            onClick={() => {\r\n                              this.deletePost();\r\n                              object.updatePosts();\r\n                            }}\r\n                          >\r\n                            <Typography variant=\"subtitle2\" color=\"secondary\">\r\n                              Delete Post\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        )}\r\n                      </ListItem>\r\n                      <ListItem button divider onClick={this.props.handleClose}>\r\n                        <CopyToClipboard\r\n                          text=\"https://saiteja623.github.io/instaclone\"\r\n                          onCopy={() => {\r\n                            this.setState({ snackbarOpen: true });\r\n                          }}\r\n                        >\r\n                          <ListItemText>\r\n                            {\" \"}\r\n                            <Typography variant=\"subtitle2\">\r\n                              {\" \"}\r\n                              Copy Link{\" \"}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </CopyToClipboard>\r\n                      </ListItem>\r\n                      <ListItem button divider onClick={this.props.handleClose}>\r\n                        <ListItemText>\r\n                          {\" \"}\r\n                          <Typography variant=\"subtitle2\"> cancel </Typography>\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                    </List>\r\n                  </DialogContent>\r\n                </Dialog>\r\n                <Snackbar\r\n                  anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\",\r\n                  }}\r\n                  autoHideDuration={2000}\r\n                  onClose={() => {\r\n                    this.setState({ snackbarOpen: false });\r\n                  }}\r\n                  message=\"Link Copied\"\r\n                  open={this.state.snackbarOpen}\r\n                />\r\n                <UnfriendAlert\r\n                  open={this.state.unfriendAlertOpen}\r\n                  handleClose={this.handleUnfriendAlert}\r\n                  image=\"Screenshot_2019-12-10-19-22-36-37.png\"\r\n                />\r\n              </>\r\n            );\r\n          }}\r\n        </ContextApi.Consumer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoreVert;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  CardHeader,\r\n  Avatar,\r\n  Button,\r\n  Typography,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport UnfriendAlert from \"./unfriendalert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport { getToken } from \"./common\";\r\n\r\nclass CardHead extends Component {\r\n  state = {\r\n    isrequested: null,\r\n    friend: null,\r\n    alertDialogOpen: false,\r\n  };\r\n  componentDidMount = () => {\r\n    if (this.props.owner !== this.props.username) {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"GET\",\r\n        `https://saiteja0413.pythonanywhere.com/api/checkFriend1${this.props.username}`,\r\n        true\r\n      );\r\n      xhr.onreadystatechange = () => {\r\n        if (xhr.readyState == 4 && xhr.status == 200) {\r\n          var res = JSON.parse(xhr.responseText);\r\n          if (res[\"friend\"] == \"yes\") {\r\n            this.setState({ friend: true });\r\n          } else if (res[\"friend\"] == \"no\") {\r\n            this.setState({ friend: false });\r\n          } else {\r\n            this.setState({ isrequested: true });\r\n          }\r\n        }\r\n      };\r\n      xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n      xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n      xhr.send();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContextApi.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <>\r\n                <CardHeader\r\n                  style={{\r\n                    verticalAlign: \"middle\",\r\n                    position: \"relative\",\r\n                    padding: \"2px 2px\",\r\n                    margin: \"4px 0px\",\r\n                  }}\r\n                  title={\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      component=\"p\"\r\n                      component={Link}\r\n                      to={`/otheruser/${this.props.username}`}\r\n                      style={{ color: \"black\", textDecoration: \"none\" }}\r\n                    >\r\n                      {this.props.username}\r\n                    </Typography>\r\n                  }\r\n                  subheader={this.props.nickname}\r\n                  avatar={\r\n                    <>\r\n                      <Hidden xsDown>\r\n                        <Avatar\r\n                          src={`https://saiteja0413.pythonanywhere.com${this.props.src}`}\r\n                          alt={this.props.username}\r\n                          style={{ width: \"27px\", height: \"27px\" }}\r\n                        ></Avatar>\r\n                      </Hidden>\r\n                      <Hidden smUp>\r\n                        <Avatar\r\n                          src={`https://saiteja0413.pythonanywhere.com${this.props.src}`}\r\n                          alt={this.props.username}\r\n                          style={{ width: \"23px\", height: \"23px\" }}\r\n                        ></Avatar>\r\n                      </Hidden>\r\n                    </>\r\n                  }\r\n                  action={\r\n                    this.props.owner !== this.props.username &&\r\n                    (this.state.isrequested ? (\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: \"50%\",\r\n                          transform: \"translateY(-50%)\",\r\n                          right: \"10px\",\r\n                          fontSize: \"0.57rem\",\r\n                          textTransform: \"capitalize\",\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                        onClick={() => {\r\n                          this.setState({ alertDialogOpen: true });\r\n                        }}\r\n                      >\r\n                        Requested\r\n                      </Button>\r\n                    ) : this.state.friend ? null : (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: \"50%\",\r\n                          transform: \"translateY(-50%)\",\r\n                          right: \"10px\",\r\n                          fontSize: \"0.57rem\",\r\n                          fontWeight: \"bold\",\r\n                          textTransform: \"capitalize\",\r\n                        }}\r\n                        onClick={() => {\r\n                          object.sendRequest(this.props.username);\r\n                          this.setState({ isrequested: true });\r\n                        }}\r\n                      >\r\n                        Follow\r\n                      </Button>\r\n                    ))\r\n                  }\r\n                />\r\n                <UnfriendAlert\r\n                  open={this.state.alertDialogOpen}\r\n                  handleClose={() => {\r\n                    this.setState({ alertDialogOpen: false });\r\n                  }}\r\n                  image={this.props.src}\r\n                  action={this.state.isrequested ? \"unsend\" : \"unfollow\"}\r\n                  unsend={() => {\r\n                    object.unsendRequest(this.props.username);\r\n                    this.setState({\r\n                      isrequested: false,\r\n                      alertDialogOpen: false,\r\n                    });\r\n                  }}\r\n                  username={this.props.username}\r\n                />{\" \"}\r\n              </>\r\n            );\r\n          }}\r\n        </ContextApi.Consumer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardHead;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  IconButton,\r\n  Divider,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport CardHead from \"./cardheader\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport { getToken } from \"./common\";\r\n\r\nclass Likes extends Component {\r\n  state = {\r\n    liked: [],\r\n  };\r\n  componentDidMount = () => {\r\n    AOS.init({ duration: 600 });\r\n  };\r\n  componentDidMount = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/get_likes1${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        this.setState({ liked: res[\"liked\"] });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.open}\r\n        onClose={this.props.handleClose}\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n      >\r\n        <DialogTitle style={{ height: \"38px\", paddingTop: 0 }}>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={9} style={{ textAlign: \"center\" }}>\r\n              <Typography variant=\"body1\">Likes</Typography>\r\n            </Grid>\r\n            <Grid item xs={1} style={{ textAlign: \"right\" }}>\r\n              <IconButton onClick={this.props.handleClose}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogTitle>\r\n        <Divider />\r\n        <DialogContent dividers>\r\n          {this.state.liked.map((e) => (\r\n            <CardHead\r\n              username={e[\"likedby\"][\"name\"]}\r\n              nickname={e[\"userDetails\"][\"name\"]}\r\n              src={e[\"userDetails\"][\"image\"]}\r\n              owner={this.props.owner}\r\n            />\r\n          ))}\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Likes;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n  IconButton,\r\n  ListItem,\r\n  List,\r\n  ListItemText,\r\n  Popover,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport { getToken } from \"./common\";\r\n\r\nclass Comments extends Component {\r\n  state = {\r\n    popupOpen: false,\r\n    anchorEl: null,\r\n    comments: [],\r\n    repeat: true,\r\n  };\r\n  handlePopOver = (e) => {\r\n    this.setState({\r\n      popupOpen: !this.state.popupOpen,\r\n      anchorEl: e.currentTarget,\r\n    });\r\n  };\r\n  componentDidMount = () => {\r\n    this.getComments();\r\n  };\r\n  componentDidUpdate = () => {\r\n    if (this.state.repeat) {\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      xhr.open(\r\n        \"POST\",\r\n        `https://saiteja0413.pythonanywhere.com/api/get_comments1${this.props.id}`,\r\n        true\r\n      );\r\n      xhr.onreadystatechange = () => {\r\n        if (xhr.readyState == 4 && xhr.status == 200) {\r\n          var res = JSON.parse(xhr.responseText);\r\n          this.setState({ comments: res[\"comments\"], repeat: false });\r\n        }\r\n      };\r\n      xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n      xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n      xhr.send();\r\n    }\r\n  };\r\n\r\n  getComments = (async) => {\r\n    var xhr = new XMLHttpRequest();\r\n\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/get_comments1${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        this.setState({ comments: res[\"comments\"] });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  render() {\r\n    return (\r\n      <ContextApi.Consumer>\r\n        {(object) => {\r\n          return (\r\n            <Dialog\r\n              open={this.props.open}\r\n              onClose={this.props.handleClose}\r\n              fullWidth\r\n              maxWidth=\"xs\"\r\n            >\r\n              <DialogTitle style={{ height: \"38px\", paddingTop: 0 }}>\r\n                <Grid container justify=\"center\" alignItems=\"center\">\r\n                  <Grid item xs={1}></Grid>\r\n                  <Grid item xs={9} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"body1\">Comments</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={1} style={{ textAlign: \"right\" }}>\r\n                    <IconButton onClick={this.props.handleClose}>\r\n                      <CloseIcon />\r\n                    </IconButton>\r\n                  </Grid>\r\n                </Grid>\r\n              </DialogTitle>\r\n              <DialogContent dividers style={{ padddingLeft: 0 }}>\r\n                {this.state.comments.map((e) => (\r\n                  <>\r\n                    <Popover\r\n                      id=\"simple-popup\"\r\n                      open={this.state.popupOpen}\r\n                      anchorEl={this.state.anchorEl}\r\n                      anchorOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\",\r\n                      }}\r\n                      transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\",\r\n                      }}\r\n                      onClose={this.handlePopOver}\r\n                    >\r\n                      <List>\r\n                        <ListItem\r\n                          dividers\r\n                          button\r\n                          onClick={() => {\r\n                            object.deleteComment(e[\"comment\"][\"id\"]);\r\n                            this.setState({ popupOpen: false, repeat: true });\r\n                          }}\r\n                        >\r\n                          <ListItemText>\r\n                            <Typography variant=\"body2\" color=\"secondary\">\r\n                              Delete Comment\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem button onClick={this.handlePopOver}>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body2\">cancel</Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                      </List>\r\n                    </Popover>\r\n                    {this.state.comments.length !== 0 && (\r\n                      <>\r\n                        <Grid container justify=\"center\">\r\n                          <Grid\r\n                            item\r\n                            xs={1}\r\n                            style={{\r\n                              textAlign: \"left\",\r\n\r\n                              alignItems: \"flex-start\",\r\n                            }}\r\n                          >\r\n                            <Avatar\r\n                              style={{\r\n                                width: \"27px\",\r\n                                height: \"27px\",\r\n                              }}\r\n                              src={`https://saiteja0413.pythonanywhere.com${e[\"profilepic\"]}`}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs>\r\n                            <Typography\r\n                              component={Link}\r\n                              to={`/otheruser/${e[\"comment\"][\"name\"]}`}\r\n                              style={{ color: \"black\", textDecoration: \"none\" }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  fontSize: \"0.89rem\",\r\n                                }}\r\n                              >\r\n                                {e[\"comment\"][\"name\"]}\r\n                              </span>{\" \"}\r\n                              <span style={{ fontSize: \"0.8rem\" }}>\r\n                                {e[\"comment\"][\"comment\"]}\r\n                              </span>\r\n                            </Typography>\r\n                          </Grid>\r\n                          {e[\"comment\"][\"name\"] ===\r\n                            object[\"userdetails\"][\"user\"][\"username\"] && (\r\n                            <Grid item xs={1}>\r\n                              <IconButton onClick={this.handlePopOver}>\r\n                                <MoreVertIcon />\r\n                              </IconButton>\r\n                            </Grid>\r\n                          )}\r\n                        </Grid>\r\n                        <br />\r\n                      </>\r\n                    )}\r\n                  </>\r\n                ))}\r\n                {this.state.comments.length === 0 && (\r\n                  <>\r\n                    <Typography variant=\"body1\" style={{ textAlign: \"center\" }}>\r\n                      Be the first to comment!\r\n                    </Typography>\r\n                    <img\r\n                      src={require(\"./comment.png\")}\r\n                      width=\"90%\"\r\n                      heigt=\"90%\"\r\n                    />\r\n                  </>\r\n                )}\r\n              </DialogContent>\r\n            </Dialog>\r\n          );\r\n        }}\r\n      </ContextApi.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Avatar,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  CardMedia,\r\n  IconButton,\r\n  Checkbox,\r\n  InputAdornment,\r\n  TextField,\r\n  Button,\r\n  Snackbar,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Dialog,\r\n  DialogContent,\r\n  MobileStepper,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport \"./css/post.css\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport MoreVert from \"./morevert\";\r\nimport Likes from \"./likes\";\r\nimport Comments from \"./comments\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { getToken } from \"./common\";\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    likeChecked: false,\r\n    activestep: 0,\r\n    id: this.props.id,\r\n    likes: this.props.likes,\r\n\r\n    isBookmarked: false,\r\n    caption: this.props.figcaption,\r\n    isDialogopen: false,\r\n    comment: \"\",\r\n    commentsDialogOpen: false,\r\n    likesDialogOpen: false,\r\n    childref: \"\",\r\n    animation: {\r\n      display: \"none\",\r\n    },\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.child = React.createRef();\r\n    this.input = React.createRef();\r\n  }\r\n  handleLikes = () => {\r\n    var liked = this.state.likeChecked;\r\n    this.setState({ likeChecked: !this.state.likeChecked });\r\n    liked\r\n      ? this.setState({ likes: this.state.likes - 1 })\r\n      : this.setState({ likes: this.state.likes + 1 });\r\n  };\r\n  handleComment = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n  };\r\n  handleCommentDialog = () => {\r\n    this.setState({ commentsDialogOpen: !this.state.commentsDialogOpen });\r\n  };\r\n  handleLikesDialog = () => {\r\n    this.setState({ likesDialogOpen: !this.state.likesDialogOpen });\r\n  };\r\n  componentDidMount = () => {\r\n    this.checkForSave();\r\n    this.checkForLike();\r\n  };\r\n  checkForSave = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/checkForSave${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        if (res[\"isSaved\"] == \"true\") {\r\n          this.setState({ isBookmarked: true });\r\n        } else {\r\n          this.setState({ isBookmarked: false });\r\n        }\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  checkForLike = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/checkForLike1${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n\r\n        if (res[\"liked\"] == \"yes\") {\r\n          this.setState({ likeChecked: true });\r\n        } else {\r\n          this.setState({ likeChecked: false });\r\n        }\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  handledialogClick = () => {\r\n    this.setState({ isDialogopen: false });\r\n  };\r\n  setlikeAnimation = () => {\r\n    this.setState({\r\n      animation: {\r\n        display: \"block\",\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        animation: {\r\n          display: \"none\",\r\n        },\r\n      });\r\n    }, 600);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContextApi.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <>\r\n                <Card\r\n                  style={{\r\n                    width: \"600px\",\r\n                    teXtaAlign: \"initial\",\r\n\r\n                    margin: \" 20px auto\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    style={{\r\n                      height: \"60px\",\r\n                    }}\r\n                    title={\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        component={Link}\r\n                        to={`/profile/${this.props.username}`}\r\n                        style={{ color: \"black\", textDecoration: \"none\" }}\r\n                      >\r\n                        {this.props.username}\r\n                      </Typography>\r\n                    }\r\n                    avatar={\r\n                      <Avatar\r\n                        style={{ width: \"30px\", height: \"30px\" }}\r\n                        alt=\"saiteja balla\"\r\n                        src={`https://saiteja0413.pythonanywhere.com${this.props.profilepic}`}\r\n                      >\r\n                        S\r\n                      </Avatar>\r\n                    }\r\n                    action={\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          this.setState({ isDialogopen: true });\r\n                        }}\r\n                      >\r\n                        <MoreVertIcon />\r\n                      </IconButton>\r\n                    }\r\n                  />\r\n                  <div className=\"card-media\">\r\n                    <SwipeableViews\r\n                      index={this.state.activestep}\r\n                      enableMouseEvents\r\n                      style={{ objectFit: \"cover\", position: \"relative\" }}\r\n                      className=\"swipable\"\r\n                    >\r\n                      {this.props.images.map((e) => (\r\n                        <img\r\n                          src={`https://saiteja0413.pythonanywhere.com${e[\"image\"]}`}\r\n                          height=\"400px\"\r\n                          className=\"image\"\r\n                          onDoubleClick={() => {\r\n                            if (!this.state.likeChecked) {\r\n                              return (\r\n                                object.increaseLike(this.props.id),\r\n                                this.setState({\r\n                                  likeChecked: true,\r\n                                  likes: this.state.likes + 1,\r\n                                }),\r\n                                this.setlikeAnimation()\r\n                              );\r\n                            } else {\r\n                              return this.setlikeAnimation();\r\n                            }\r\n                          }}\r\n                        />\r\n                      ))}\r\n\r\n                      <FavoriteIcon\r\n                        style={this.state.animation}\r\n                        className=\"heart-icon\"\r\n                      />\r\n                    </SwipeableViews>\r\n                    {this.props.images.length > 1 && (\r\n                      <MobileStepper\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          background: \"transparent\",\r\n                        }}\r\n                        steps={this.props.images.length}\r\n                        className=\"stepper\"\r\n                        variant=\"none\"\r\n                        backButton={\r\n                          <Button\r\n                            disableRipple\r\n                            disabled={this.state.activestep === 0}\r\n                            disableTouchRipple\r\n                            style={\r\n                              this.state.activestep === 0\r\n                                ? { opacity: 0 }\r\n                                : { color: \"white\" }\r\n                            }\r\n                            onClick={() => {\r\n                              this.setState({\r\n                                activestep: this.state.activestep - 1,\r\n                              });\r\n                            }}\r\n                          >\r\n                            <KeyboardArrowLeftIcon\r\n                              style={{\r\n                                background: \"white\",\r\n                                borderRadius: \"50%\",\r\n                                fontSize: \"1rem\",\r\n                                color: \"black\",\r\n                              }}\r\n                            />\r\n                          </Button>\r\n                        }\r\n                        nextButton={\r\n                          this.state.activestep !==\r\n                            this.props.images.length - 1 && (\r\n                            <Button\r\n                              disableRipple\r\n                              disableTouchRipple\r\n                              style={{ color: \"white\" }}\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  activestep: this.state.activestep + 1,\r\n                                });\r\n                              }}\r\n                            >\r\n                              <KeyboardArrowRightIcon\r\n                                style={{\r\n                                  background: \"white\",\r\n                                  borderRadius: \"50%\",\r\n                                  fontSize: \"1rem\",\r\n                                  color: \"black\",\r\n                                }}\r\n                              />\r\n                            </Button>\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <CardActions\r\n                    disableSpacing\r\n                    style={{\r\n                      position: \"relative\",\r\n\r\n                      fontSize: \"0.5rem\",\r\n                      padding: \"6px\",\r\n                    }}\r\n                  >\r\n                    <Checkbox\r\n                      icon={<FavoriteBorder />}\r\n                      checkedIcon={<Favorite />}\r\n                      size=\"small\"\r\n                      name=\"checkedH\"\r\n                      checked={this.state.likeChecked}\r\n                      onChange={this.handleLikes}\r\n                      onClick={() => {\r\n                        !this.state.likeChecked\r\n                          ? object.increaseLike(this.props.id)\r\n                          : object.decreaseLike(this.props.id);\r\n                      }}\r\n                    />\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      onClick={() => {\r\n                        this.input.current.focus();\r\n                      }}\r\n                    >\r\n                      <ModeCommentOutlinedIcon style={{ fontSize: \"1.2rem\" }} />\r\n                    </IconButton>\r\n                    <br />\r\n                    <Checkbox\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: \"10px\",\r\n                      }}\r\n                      size=\"small\"\r\n                      icon={<BookmarkBorderIcon />}\r\n                      checkedIcon={<BookmarkIcon style={{ color: \"black\" }} />}\r\n                      name=\"checkedH\"\r\n                      checked={this.state.isBookmarked}\r\n                      onChange={() => {\r\n                        this.setState({\r\n                          isBookmarked: !this.state.isBookmarked,\r\n                        });\r\n                      }}\r\n                      onClick={() => {\r\n                        !this.state.isBookmarked\r\n                          ? object.savePost(this.props.id)\r\n                          : object.unsavePost(this.props.id);\r\n                      }}\r\n                    />\r\n                    {this.state.likes > 0 && (\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          left: \"15px\",\r\n                          bottom: \"-10px\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={this.handleLikesDialog}\r\n                      >\r\n                        <span style={{ fontWeight: \"bold\" }}>\r\n                          {this.state.likes} likes\r\n                        </span>\r\n                      </Typography>\r\n                    )}\r\n                  </CardActions>\r\n                  <CardContent>\r\n                    {this.state.caption != \"\" && (\r\n                      <>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          component={Link}\r\n                          to={`/otheruser/${this.props.username}`}\r\n                          style={{ color: \"black\", textDecoration: \"none\" }}\r\n                        >\r\n                          <span\r\n                            style={{ fontWeight: \"bold\", fontSize: \"0.94rem\" }}\r\n                          >\r\n                            {this.props.username}\r\n                          </span>{\" \"}\r\n                          {this.state.caption}\r\n                        </Typography>\r\n                      </>\r\n                    )}\r\n\r\n                    <Typography\r\n                      variant=\"subtitle2\"\r\n                      color=\"textSecondary\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={this.handleCommentDialog}\r\n                    >\r\n                      view all comments\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                      style={{\r\n                        width: \"100%\",\r\n                        fontSize: \"0.3rem\",\r\n                        paddingLeft: \"1px\",\r\n                      }}\r\n                      size=\"small\"\r\n                      value={this.state.comment}\r\n                      onChange={(e) => this.handleComment(e)}\r\n                      placeholder=\"Add a comment\"\r\n                      inputRef={this.input}\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              style={{ fontSize: \"0.6rem\" }}\r\n                              disabled={\r\n                                this.state.comment === \"\" ||\r\n                                this.state.comment.indexOf(\" \") == 0\r\n                              }\r\n                              onClick={() => {\r\n                                object.addComment(\r\n                                  this.props.id,\r\n                                  this.state.comment\r\n                                );\r\n                                this.setState({ comment: \"\" });\r\n                                this.child.current.getComments();\r\n                              }}\r\n                            >\r\n                              post\r\n                            </Button>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <MoreVert\r\n                  open={this.state.isDialogopen}\r\n                  handleClose={() => {\r\n                    this.setState({ isDialogopen: !this.state.isDialogopen });\r\n                  }}\r\n                  username={this.props.username}\r\n                />\r\n                <Likes\r\n                  open={this.state.likesDialogOpen}\r\n                  id={this.props.id}\r\n                  handleClose={this.handleLikesDialog}\r\n                  owner={object[\"userdetails\"][\"user\"][\"username\"]}\r\n                />\r\n                <Comments\r\n                  ref={this.child}\r\n                  open={this.state.commentsDialogOpen}\r\n                  id={this.props.id}\r\n                  handleClose={this.handleCommentDialog}\r\n                />\r\n              </>\r\n            );\r\n          }}\r\n        </ContextApi.Consumer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport Post from \"./post\";\r\nimport Likes from \"./likes\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  CardHeader,\r\n  CardContent,\r\n  CardMedia,\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardActionArea,\r\n} from \"@material-ui/core\";\r\nimport \"./css/route.css\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    loading: true,\r\n  };\r\n  componentDidMount = () => {\r\n    this.setLoadingFalse();\r\n  };\r\n  setLoadingFalse = () => {\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n    }, 3000);\r\n  };\r\n  render() {\r\n    return (\r\n      <ContextApi.Consumer>\r\n        {(object) => {\r\n          if (this.state.loading) {\r\n            return (\r\n              <Card style={{ height: \"400px\" }}>\r\n                <CardHeader\r\n                  title={\r\n                    <Skeleton\r\n                      animation=\"wave\"\r\n                      variant=\"text\"\r\n                      style={{ width: \"40%\" }}\r\n                    />\r\n                  }\r\n                  avatar={\r\n                    <Avatar>\r\n                      <Skeleton animation=\"wave\" variant=\"circle\" />{\" \"}\r\n                    </Avatar>\r\n                  }\r\n                  subheader={\r\n                    <Skeleton\r\n                      animation=\"wave\"\r\n                      variant=\"text\"\r\n                      style={{ width: \"20%\" }}\r\n                    />\r\n                  }\r\n                />\r\n                <CardMedia style={{ width: \"100%\", height: \"270px\" }}>\r\n                  <Skeleton\r\n                    variant=\"rect\"\r\n                    animation=\"wave\"\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </CardMedia>\r\n                <CardActionArea>\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    animation=\"wave\"\r\n                    style={{\r\n                      width: \"60%\",\r\n                      marginLeft: \"20px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  />\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    animation=\"wave\"\r\n                    style={{ width: \"40%\", marginLeft: \"20px\" }}\r\n                  />\r\n                </CardActionArea>\r\n              </Card>\r\n            );\r\n          } else if (object[\"posts\"].length === 0) {\r\n            return (\r\n              <>\r\n                <Paper style={{ marginBottom: \"10px\" }}>\r\n                  <img\r\n                    src={require(\"./empty.png\")}\r\n                    className=\"empty-posts-img\"\r\n                  />\r\n                </Paper>\r\n                <Typography variant=\"body2\" style={{ textAlign: \"center\" }}>\r\n                  Oops! No posts.\r\n                </Typography>\r\n              </>\r\n            );\r\n          } else {\r\n            return object[\"posts\"].map((e) => (\r\n              <>\r\n                <Post\r\n                  username={e[\"username\"]}\r\n                  likes={e[\"details\"][\"post\"][\"likes\"]}\r\n                  figcaption={e[\"details\"][\"post\"][\"figcaption\"]}\r\n                  images={e[\"details\"][\"images\"]}\r\n                  id={e[\"details\"][\"post\"][\"id\"]}\r\n                  profilepic={e[\"profilepic\"]}\r\n                  key={e[\"details\"][\"post\"][[\"id\"]]}\r\n                />\r\n              </>\r\n            ));\r\n          }\r\n        }}\r\n      </ContextApi.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import React, { Component } from \"react\";\r\nimport CardHead from \"./cardheader\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  CardHeader,\r\n  Avatar,\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  Divider,\r\n  Hidden,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ContextApi } from \"./contextapi\";\r\n\r\nclass Suggestions extends Component {\r\n  state = {\r\n    username: \"saiteja\",\r\n  };\r\n  render() {\r\n    return (\r\n      <ContextApi.Consumer>\r\n        {(object) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                position: \"fixed\",\r\n                marginLeft: \"20px\",\r\n                width: this.props.width,\r\n                maxWidth: \"300px\",\r\n              }}\r\n            >\r\n              <Hidden xsDown>\r\n                <Paper\r\n                  elevetion={1}\r\n                  style={{\r\n                    width: \"300px\",\r\n                    margin: \"20px auto\",\r\n                    padding: \"6px\",\r\n                  }}\r\n                >\r\n                  <Grid container spacing={0}>\r\n                    <Grid\r\n                      item\r\n                      xs={3}\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        verticalAlign: \"middle\",\r\n                      }}\r\n                    >\r\n                      <Avatar\r\n                        src={`https://saiteja0413.pythonanywhere.com${object[\"userdetails\"][\"image\"]}`}\r\n                        style={{\r\n                          width: \"60px\",\r\n                          height: \"60px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item container direction=\"column\" xs>\r\n                      <Grid item xs>\r\n                        <Typography variant=\"h6\">\r\n                          {object[\"userdetails\"][\"user\"][\"username\"]}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs>\r\n                        <Typography variant=\"body1\">\r\n                          {object[\"userdetails\"][\"name\"]}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs style={{ textAlign: \"right\" }}>\r\n                        <Button\r\n                          size=\"small\"\r\n                          component={Link}\r\n                          color=\"primary\"\r\n                          to={`profile/${object[\"userdetails\"][\"user\"][\"username\"]}`}\r\n                          style={{ fontSize: \"0.7rem\" }}\r\n                        >\r\n                          Edit Profile\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </Hidden>\r\n              <Paper\r\n                elevation={2}\r\n                style={{\r\n                  width: this.props.width,\r\n                  padding: \"6px\",\r\n                  position: \"sticky\",\r\n                  margin: \"20px auto\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  style={{ paddingLeft: \"10px\", paddingBottom: \"10px\" }}\r\n                >\r\n                  Suggestions\r\n                </Typography>{\" \"}\r\n                <Divider />\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: this.props.height,\r\n                    overflowY: \"scroll\",\r\n                    scrollbarWidth: \"none\",\r\n                    padding: \"0px 6px\",\r\n                  }}\r\n                >\r\n                  {object[\"suggestions\"].map((e) => (\r\n                    <CardHead\r\n                      username={e[\"user\"][\"username\"]}\r\n                      nickname={e[\"name\"]}\r\n                      src={e[\"image\"]}\r\n                      owner={object[\"userdetails\"][\"user\"][\"username\"]}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </Paper>\r\n            </div>\r\n          );\r\n        }}\r\n      </ContextApi.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Suggestions;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Grid,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  CardHeader,\r\n  CircularProgress,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport CardHead from \"./cardheader\";\r\nimport { getToken } from \"./common\";\r\n\r\nclass LikesFull extends Component {\r\n  state = {\r\n    liked: [],\r\n    loading: true,\r\n  };\r\n  componentDidMount = () => {\r\n    this.getLikes();\r\n  };\r\n  getLikes = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/get_likes1${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        this.setState({ liked: res[\"liked\"], loading: false });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  render() {\r\n    return (\r\n      <Dialog fullScreen open onClose={this.props.closeDialog}>\r\n        <DialogTitle style={{ padding: 0, height: \"35px\" }}>\r\n          <Grid container justify=\"center\" justify=\"center\">\r\n            <Grid item xs={1}>\r\n              <KeyboardArrowLeftIcon\r\n                onClick={this.props.closeDialog}\r\n                style={{ marginTop: \"4px\", marginLeft: \"10px\" }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs\r\n              style={{\r\n                textAlign: \"center\",\r\n                lineHeight: \"35px\",\r\n                height: \"35px\",\r\n              }}\r\n            >\r\n              <Typography variant=\"body1\">Likes</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          {this.state.loading && (\r\n            <div\r\n              style={{\r\n                margin: \"20px auto\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <CircularProgress size={20} style={{ margin: \"0px auto\" }} />\r\n            </div>\r\n          )}\r\n          {this.state.liked.map((e) => (\r\n            <>\r\n              <CardHead\r\n                username={e[\"likedby\"][\"name\"]}\r\n                nickname={e[\"userDetails\"][\"name\"]}\r\n                src={e[\"userDetails\"][\"image\"]}\r\n                owner={this.props.owner}\r\n              />\r\n              <Divider />\r\n            </>\r\n          ))}\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LikesFull;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Grid,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  CardHeader,\r\n  Divider,\r\n  Avatar,\r\n  Paper,\r\n  Button,\r\n  Popover,\r\n  IconButton,\r\n  ListItem,\r\n  List,\r\n  ListItemText,\r\n  CircularProgress,\r\n  Alert,\r\n} from \"@material-ui/core\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { getToken } from \"./common\";\r\n\r\nclass CommentsFull extends Component {\r\n  state = {\r\n    comments: [],\r\n    popupOpen: false,\r\n    anchorEl: null,\r\n    comment: \"\",\r\n    repeat: false,\r\n    newComment: \"\",\r\n    loading: true,\r\n  };\r\n  handleComment = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n  };\r\n  handlePopOver = (e) => {\r\n    this.setState({\r\n      popupOpen: !this.state.popupOpen,\r\n      anchorEl: e.currentTarget,\r\n    });\r\n  };\r\n  componentDidMount = () => {\r\n    this.getComments();\r\n  };\r\n  componentDidUpdate = () => {\r\n    if (this.state.newComment !== \"\") {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        `https://saiteja0413.pythonanywhere.com/api/get_comments1${this.props.id}`,\r\n        true\r\n      );\r\n      xhr.onreadystatechange = () => {\r\n        if (xhr.readyState == 4 && xhr.status == 200) {\r\n          var res = JSON.parse(xhr.responseText);\r\n          this.setState({\r\n            comments: res[\"comments\"],\r\n            newComment: \"\",\r\n            comment: \"\",\r\n          });\r\n        }\r\n      };\r\n      xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n      xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n      xhr.send();\r\n    }\r\n  };\r\n  getComments = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/get_comments1${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        this.setState({ comments: res[\"comments\"], loading: false });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n\r\n    xhr.send();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContextApi.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <Dialog fullScreen open onClose={this.props.closeDialog}>\r\n                <DialogTitle style={{ padding: 0, height: \"35px\" }}>\r\n                  <Grid container justify=\"center\" justify=\"center\">\r\n                    <Grid item xs={1}>\r\n                      <KeyboardArrowLeftIcon\r\n                        onClick={this.props.closeDialog}\r\n                        style={{ marginTop: \"4px\", marginLeft: \"10px\" }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      xs\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        lineHeight: \"35px\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body1\">Comments</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </DialogTitle>\r\n                <DialogContent style={{ padding: \"6px\" }} dividers>\r\n                  <Paper\r\n                    style={{ width: \"100%\", margin: \"4px 0px\", padding: \"6px\" }}\r\n                  >\r\n                    <Grid container>\r\n                      <Grid item xs={2}>\r\n                        <Avatar\r\n                          style={{\r\n                            width: \"30px\",\r\n                            height: \"30px\",\r\n                            margin: \"3px auto\",\r\n                          }}\r\n                          src={`https://saiteja0413.pythonanywhere.com${object[\"userdetails\"][\"image\"]}`}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={8}>\r\n                        <input\r\n                          type=\"text\"\r\n                          style={{\r\n                            borderRadius: \"6px\",\r\n                            width: \"100%\",\r\n                            border: \"solid 1px rgb(0,0,0,0.4)\",\r\n                            padding: \"2px 6px\",\r\n                            fontSize: \"0.8rem\",\r\n                            height: \"30px\",\r\n                          }}\r\n                          value={this.state.comment}\r\n                          onChange={this.handleComment}\r\n                          placeholder=\"Add a comment\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={2}>\r\n                        <Button\r\n                          style={{ fontSize: \"0.74rem\" }}\r\n                          disabled={\r\n                            this.state.comment === \"\" ||\r\n                            this.state.comment.indexOf(\" \") === 0\r\n                          }\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            object.addComment(\r\n                              this.props.id,\r\n                              this.state.comment\r\n                            );\r\n                            this.setState({ newComment: this.state.comment });\r\n                          }}\r\n                        >\r\n                          Post\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Paper>\r\n                  <Divider />\r\n                  <br />\r\n                  {this.state.loading && (\r\n                    <div\r\n                      style={{\r\n                        margin: \"20px auto\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      <CircularProgress\r\n                        size={20}\r\n                        style={{ margin: \"0px auto\" }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {this.state.comments.length === 0 && !this.state.loading && (\r\n                    <>\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        style={{ textAlign: \"center\" }}\r\n                      >\r\n                        Be the first to comment!\r\n                      </Typography>\r\n                      <img\r\n                        src={require(\"./comment.png\")}\r\n                        className=\"comments-illust\"\r\n                      />\r\n                    </>\r\n                  )}\r\n                  {this.state.comments.length !== 0 &&\r\n                    this.state.comments.map((e) => (\r\n                      <>\r\n                        <Popover\r\n                          id=\"simple-popup\"\r\n                          open={this.state.popupOpen}\r\n                          anchorEl={this.state.anchorEl}\r\n                          anchorOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"center\",\r\n                          }}\r\n                          transformOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"center\",\r\n                          }}\r\n                          onClose={this.handlePopOver}\r\n                        >\r\n                          <List>\r\n                            <ListItem\r\n                              dividers\r\n                              button\r\n                              onClick={() => {\r\n                                object.deleteComment(e[\"comment\"][\"id\"]);\r\n                                this.setState({\r\n                                  popupOpen: false,\r\n                                  newComment: \"dd\",\r\n                                });\r\n                              }}\r\n                            >\r\n                              <ListItemText>\r\n                                <Typography variant=\"body2\" color=\"secondary\">\r\n                                  Delete Comment\r\n                                </Typography>\r\n                              </ListItemText>\r\n                            </ListItem>\r\n                            <ListItem button onClick={this.handlePopOver}>\r\n                              <ListItemText>\r\n                                <Typography variant=\"body2\">cancel</Typography>\r\n                              </ListItemText>\r\n                            </ListItem>\r\n                          </List>\r\n                        </Popover>\r\n                        <Grid item container xs justify=\"center\">\r\n                          <Grid\r\n                            item\r\n                            xs={1}\r\n                            style={{\r\n                              textAlign: \"middle\",\r\n                              padding: \"4px\",\r\n                            }}\r\n                          >\r\n                            <Avatar\r\n                              style={{\r\n                                width: \"24px\",\r\n                                height: \"24px\",\r\n                                margin: \"3px auto\",\r\n                              }}\r\n                              src={`https://saiteja0413.pythonanywhere.com${e[\"profilepic\"]}`}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs style={{ paddingLeft: \"10px\" }}>\r\n                            <Typography\r\n                              component={Link}\r\n                              to={`/otheruser/${e[\"comment\"][\"name\"]}`}\r\n                              style={{ color: \"black\", textDecoration: \"none\" }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  fontSize: \"0.89rem\",\r\n                                }}\r\n                              >\r\n                                {e[\"comment\"][\"name\"]}\r\n                              </span>{\" \"}\r\n                              <span style={{ fontSize: \"0.8rem\" }}>\r\n                                {e[\"comment\"][\"comment\"]}\r\n                              </span>\r\n                            </Typography>\r\n                          </Grid>\r\n                          {e[\"comment\"][\"name\"] ===\r\n                            object[\"userdetails\"][\"user\"][\"username\"] && (\r\n                            <Grid item>\r\n                              <IconButton>\r\n                                <MoreVertIcon\r\n                                  id=\"simple-popup\"\r\n                                  onClick={this.handlePopOver}\r\n                                />\r\n                              </IconButton>\r\n                            </Grid>\r\n                          )}\r\n                        </Grid>\r\n                      </>\r\n                    ))}\r\n                  <Divider />\r\n                </DialogContent>\r\n              </Dialog>\r\n            );\r\n          }}\r\n        </ContextApi.Consumer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentsFull;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Avatar,\r\n  Typography,\r\n  Checkbox,\r\n  CardHeader,\r\n  IconButton,\r\n  MobileStepper,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport \"./css/profile.css\";\r\nimport LikesFull from \"./likesfull\";\r\nimport CommentsFull from \"./commentsfull\";\r\nimport MoreVert from \"./morevert\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { getToken } from \"./common\";\r\n\r\nclass PostImageFull extends Component {\r\n  state = {\r\n    isLiked: false,\r\n    isBookmarked: false,\r\n    likesDialogOpen: false,\r\n    commentsDialogOpen: false,\r\n    MoreDialogOpen: false,\r\n    likes: this.props.likes,\r\n    activestep: 0,\r\n    animation: {\r\n      display: \"none\",\r\n    },\r\n  };\r\n  componentDidMount = () => {\r\n    this.checkForSave();\r\n    this.checkForLike();\r\n  };\r\n  handleLikes = () => {\r\n    var liked = this.state.isLiked;\r\n    this.setState({ isLiked: !this.state.isLiked });\r\n    liked\r\n      ? this.setState({ likes: this.state.likes - 1 })\r\n      : this.setState({ likes: this.state.likes + 1 });\r\n  };\r\n  checkForSave = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/checkForSave${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        if (res[\"isSaved\"] == \"true\") {\r\n          this.setState({ isBookmarked: true });\r\n        } else {\r\n          this.setState({ isBookmarked: false });\r\n        }\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  checkForLike = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/checkForLike1${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n\r\n        if (res[\"liked\"] == \"yes\") {\r\n          this.setState({ isLiked: true });\r\n        } else {\r\n          this.setState({ isLiked: false });\r\n        }\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  handleLikesDialog = () => {\r\n    this.setState({ likesDialogOpen: !this.state.likesDialogOpen });\r\n  };\r\n  handleCommentsDialog = () => {\r\n    this.setState({ commentsDialogOpen: !this.state.commentsDialogOpen });\r\n  };\r\n  handleMoreDialog = () => {\r\n    this.setState({ MoreDialogOpen: !this.state.MoreDialogOpen });\r\n  };\r\n  setlikeAnimation = () => {\r\n    this.setState({\r\n      animation: {\r\n        display: \"block\",\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        animation: {\r\n          display: \"none\",\r\n        },\r\n      });\r\n    }, 600);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContextApi.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  className=\"post-image-full-grid\"\r\n                  style={{ margin: \"10px auto\" }}\r\n                >\r\n                  <Grid item style={{ minWidth: \"100%\" }}>\r\n                    <CardHeader\r\n                      title={\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          component={Link}\r\n                          to={`/otheruser/${this.props.username}`}\r\n                          style={{ color: \"black\", textDecoration: \"none\" }}\r\n                        >\r\n                          {this.props.username}\r\n                        </Typography>\r\n                      }\r\n                      avatar={\r\n                        <Avatar\r\n                          style={{ width: \"26px\", height: \"26px\" }}\r\n                          src={`https://saiteja0413.pythonanywhere.com${this.props.profilepic}`}\r\n                        />\r\n                      }\r\n                      action={\r\n                        <IconButton onClick={this.handleMoreDialog}>\r\n                          <MoreVertIcon />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item style={{ minWidth: \"100%\", position: \"relative\" }}>\r\n                    <SwipeableViews\r\n                      index={this.state.activestep}\r\n                      enableMouseEvents\r\n                      style={{ objectFit: \"cover\", position: \"relative\" }}\r\n                      className=\"swipable\"\r\n                    >\r\n                      {this.props.images.map((e) => (\r\n                        <img\r\n                          src={`https://saiteja0413.pythonanywhere.com${e[\"image\"]}`}\r\n                          className=\"post-image-full\"\r\n                          onDoubleClick={() => {\r\n                            if (!this.state.isLiked) {\r\n                              return (\r\n                                object.increaseLike(this.props.id),\r\n                                this.setState({\r\n                                  isLiked: true,\r\n                                  likes: this.state.likes + 1,\r\n                                }),\r\n                                this.setlikeAnimation()\r\n                              );\r\n                            } else {\r\n                              return this.setlikeAnimation();\r\n                            }\r\n                          }}\r\n                        />\r\n                      ))}\r\n                      <FavoriteIcon\r\n                        style={this.state.animation}\r\n                        className=\"heart-icon\"\r\n                      />\r\n                    </SwipeableViews>\r\n                    {this.props.images.length > 1 && (\r\n                      <MobileStepper\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          background: \"transparent\",\r\n                        }}\r\n                        steps={this.props.images.length}\r\n                        className=\"stepper\"\r\n                        variant=\"none\"\r\n                        backButton={\r\n                          <Button\r\n                            disableRipple\r\n                            disabled={this.state.activestep === 0}\r\n                            disableTouchRipple\r\n                            style={\r\n                              this.state.activestep === 0\r\n                                ? { opacity: 0 }\r\n                                : { color: \"white\" }\r\n                            }\r\n                            onClick={() => {\r\n                              this.setState({\r\n                                activestep: this.state.activestep - 1,\r\n                              });\r\n                            }}\r\n                          >\r\n                            <KeyboardArrowLeftIcon\r\n                              style={{\r\n                                background: \"white\",\r\n                                borderRadius: \"50%\",\r\n                                fontSize: \"0.83rem\",\r\n                                color: \"black\",\r\n                              }}\r\n                            />\r\n                          </Button>\r\n                        }\r\n                        nextButton={\r\n                          this.state.activestep !==\r\n                            this.props.images.length - 1 && (\r\n                            <Button\r\n                              disableRipple\r\n                              disableTouchRipple\r\n                              style={{ color: \"white\" }}\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  activestep: this.state.activestep + 1,\r\n                                });\r\n                              }}\r\n                            >\r\n                              <KeyboardArrowRightIcon\r\n                                style={{\r\n                                  background: \"white\",\r\n                                  borderRadius: \"50%\",\r\n                                  fontSize: \"0.83rem\",\r\n                                  color: \"black\",\r\n                                }}\r\n                              />\r\n                            </Button>\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    style={{\r\n                      minWidth: \"100%\",\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Checkbox\r\n                      icon={<FavoriteBorder />}\r\n                      checkedIcon={<Favorite />}\r\n                      name=\"checkedH\"\r\n                      checked={this.state.isLiked}\r\n                      onChange={this.handleLikes}\r\n                      onClick={() => {\r\n                        !this.state.isLiked\r\n                          ? object.increaseLike(this.props.id)\r\n                          : object.decreaseLike(this.props.id);\r\n                      }}\r\n                    />\r\n                    <IconButton onClick={this.handleCommentsDialog}>\r\n                      <ModeCommentOutlinedIcon />\r\n                    </IconButton>\r\n                    <Checkbox\r\n                      style={{ position: \"absolute\", right: \"10px\" }}\r\n                      icon={<BookmarkBorderIcon />}\r\n                      checkedIcon={<BookmarkIcon style={{ color: \"black\" }} />}\r\n                      name=\"checkedH\"\r\n                      checked={this.state.isBookmarked}\r\n                      onChange={() => {\r\n                        this.setState({\r\n                          isBookmarked: !this.state.isBookmarked,\r\n                        });\r\n                      }}\r\n                      onClick={() => {\r\n                        !this.state.isBookmarked\r\n                          ? object.savePost(this.props.id)\r\n                          : object.unsavePost(this.props.id);\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  {this.state.likes !== 0 && (\r\n                    <Grid\r\n                      item\r\n                      style={{ minWidth: \"100%\", marginTop: \"1px\" }}\r\n                      className=\"num-of-likes\"\r\n                      onClick={this.handleLikesDialog}\r\n                    >\r\n                      <span style={{ fontSize: \"0.96rem\" }}>\r\n                        {\" \"}\r\n                        {this.state.likes} likes\r\n                      </span>\r\n                    </Grid>\r\n                  )}\r\n                  {this.props.figcaption !== \"\" && (\r\n                    <Grid\r\n                      item\r\n                      style={{ minWidth: \"100%\", paddingLeft: \"11px\" }}\r\n                    >\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        component={Link}\r\n                        to={`/otheruser/${this.props.username}`}\r\n                        style={{ color: \"black\", textDecoration: \"none\" }}\r\n                      >\r\n                        <span\r\n                          style={{ fontWeight: \"bold\", fontSize: \"0.99rem\" }}\r\n                        >\r\n                          {this.props.username}\r\n                        </span>\r\n                        {\"   \"}\r\n                        {this.props.figcaption}\r\n                      </Typography>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid\r\n                    item\r\n                    className=\"num-of-likes\"\r\n                    style={{ minWidth: \"100%\", marginTop: \"5px\" }}\r\n                  >\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      onClick={this.handleCommentsDialog}\r\n                    >\r\n                      view all comments\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                {this.state.likesDialogOpen && (\r\n                  <LikesFull\r\n                    id={this.props.id}\r\n                    owner={object[\"userdetails\"][\"user\"][\"username\"]}\r\n                    closeDialog={this.handleLikesDialog}\r\n                  />\r\n                )}\r\n              </>\r\n            );\r\n          }}\r\n        </ContextApi.Consumer>\r\n\r\n        {this.state.commentsDialogOpen && (\r\n          <CommentsFull\r\n            id={this.props.id}\r\n            closeDialog={this.handleCommentsDialog}\r\n          />\r\n        )}\r\n        <MoreVert\r\n          open={this.state.MoreDialogOpen}\r\n          handleClose={this.handleMoreDialog}\r\n          username={this.props.username}\r\n          id={this.props.id}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostImageFull;\r\n","import React, { Component } from \"react\";\r\nimport PostImageFull from \"./postimagefull\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  CardHeader,\r\n  CardContent,\r\n  CardMedia,\r\n  Avatar,\r\n  Card,\r\n  Divider,\r\n  CardActions,\r\n  CardActionArea,\r\n} from \"@material-ui/core\";\r\nimport \"./css/route.css\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nclass PostInMobile extends Component {\r\n  state = {\r\n    loading: true,\r\n    list: [1, 2],\r\n  };\r\n  componentDidMount = () => {\r\n    this.setLoadingFalse();\r\n  };\r\n  setLoadingFalse = () => {\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n    }, 2000);\r\n  };\r\n  render() {\r\n    return (\r\n      <ContextApi.Consumer>\r\n        {(object) => {\r\n          if (this.state.loading) {\r\n            return this.state.list.map((e) => (\r\n              <Card\r\n                style={{\r\n                  height: \"300px\",\r\n                  width: \"500px\",\r\n\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <CardHeader\r\n                  title={\r\n                    <Skeleton\r\n                      animation=\"wave\"\r\n                      variant=\"text\"\r\n                      style={{ width: \"40%\" }}\r\n                    />\r\n                  }\r\n                  avatar={\r\n                    <Avatar>\r\n                      <Skeleton animation=\"wave\" variant=\"circle\" />{\" \"}\r\n                    </Avatar>\r\n                  }\r\n                  subheader={\r\n                    <Skeleton\r\n                      animation=\"wave\"\r\n                      variant=\"text\"\r\n                      style={{ width: \"20%\" }}\r\n                    />\r\n                  }\r\n                />\r\n                <CardMedia style={{ width: \"100%\", height: \"180px\" }}>\r\n                  <Skeleton\r\n                    variant=\"rect\"\r\n                    animation=\"wave\"\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                  />\r\n                </CardMedia>\r\n                <CardActionArea>\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    animation=\"wave\"\r\n                    style={{\r\n                      width: \"60%\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  />\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    animation=\"wave\"\r\n                    style={{ width: \"40%\", marginLeft: \"10px\" }}\r\n                  />\r\n                </CardActionArea>\r\n              </Card>\r\n            ));\r\n          } else if (object[\"posts\"].length == 0) {\r\n            return (\r\n              <>\r\n                <Paper style={{ marginBottom: \"10px\", marginTop: \"50px\" }}>\r\n                  <img\r\n                    src={require(\"./empty.png\")}\r\n                    className=\"empty-posts-img\"\r\n                  />\r\n                </Paper>\r\n                <Typography variant=\"h6\" style={{ textAlign: \"center\" }}>\r\n                  Oops! No posts.\r\n                </Typography>\r\n              </>\r\n            );\r\n          } else {\r\n            return object[\"posts\"].map((e) => (\r\n              <>\r\n                <PostImageFull\r\n                  style={{ margin: \"10px\" }}\r\n                  username={e[\"username\"]}\r\n                  likes={e[\"details\"][\"post\"][\"likes\"]}\r\n                  figcaption={e[\"details\"][\"post\"][\"figcaption\"]}\r\n                  images={e[\"details\"][\"images\"]}\r\n                  id={e[\"details\"][\"post\"][\"id\"]}\r\n                  profilepic={e[\"profilepic\"]}\r\n                />\r\n                <Divider />\r\n              </>\r\n            ));\r\n          }\r\n        }}\r\n      </ContextApi.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostInMobile;\r\n","import React, { Component } from \"react\";\r\nimport Posts from \"./posts\";\r\nimport Suggestions from \"./suggestions\";\r\nimport { Grid, Hidden } from \"@material-ui/core\";\r\nimport PostInMobile from \"./postsinmobile\";\r\nimport UnfriendAlret from \"./unfriendalert\";\r\nimport { Context } from \"./contextapi\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <>\r\n        <Hidden xsDown>\r\n          <Context>\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              justify=\"center\"\r\n              style={{\r\n                width: \"960px\",\r\n                margin: \"0px auto\",\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                sm={12}\r\n                md\r\n                style={{ margin: \"0px auto\" }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Posts />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item md>\r\n                <Hidden smDown>\r\n                  <Suggestions width=\"300px\" height={\"50vh\"} />\r\n                </Hidden>\r\n              </Grid>\r\n            </Grid>\r\n          </Context>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <Context>\r\n            <Grid container justify=\"center\" style={{ minwidth: \"100%\" }}>\r\n              <Grid item>\r\n                <PostInMobile />\r\n              </Grid>\r\n            </Grid>\r\n          </Context>\r\n        </Hidden>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Dialog,\r\n  DialogContent,\r\n  Hidden,\r\n  IconButton,\r\n  Avatar,\r\n  Typography,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  Checkbox,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  MobileStepper,\r\n  InputAdornment,\r\n  Popover,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"./css/profile.css\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport CardHead from \"./cardheader\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport MoreVert from \"./morevert\";\r\nimport Likes from \"./likes\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getToken } from \"./common\";\r\n\r\nclass PostImage extends Component {\r\n  state = {\r\n    isLiked: false,\r\n    isDialogopen: false,\r\n    comment: \"\",\r\n    myinp: \"\",\r\n    popupOpen: false,\r\n    anchorEl: null,\r\n    likesDialogOpen: false,\r\n    comments: [],\r\n    newComment: \"\",\r\n    isBookmarked: false,\r\n    activestep: 0,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.myinp = React.createRef();\r\n  }\r\n  componentDidMount = () => {\r\n    AOS.init({ duration: 600 });\r\n    this.getComments();\r\n    this.checkForSave();\r\n    this.checkForLike();\r\n  };\r\n\r\n  checkForLike = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/checkForLike1${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n\r\n        if (res[\"liked\"] == \"yes\") {\r\n          this.setState({ isLiked: true });\r\n        } else {\r\n          this.setState({ isLiked: false });\r\n        }\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  checkForSave = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/checkForSave${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        if (res[\"isSaved\"] == \"true\") {\r\n          this.setState({ isBookmarked: true });\r\n        } else {\r\n          this.setState({ isBookmarked: false });\r\n        }\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  componentDidUpdate = () => {\r\n    if (this.state.newComment !== \"\") {\r\n      this.getComments();\r\n    }\r\n  };\r\n  getComments = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/get_comments1${this.props.id}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        this.setState({\r\n          comments: res[\"comments\"],\r\n          newComment: \"\",\r\n          comment: \"\",\r\n        });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  handledialogClick = () => {\r\n    this.setState({ isDialogopen: !this.state.isDialogopen });\r\n  };\r\n  handleComment = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n  };\r\n  handlePopOver = (e) => {\r\n    this.setState({\r\n      popupOpen: !this.state.popupOpen,\r\n      anchorEl: e.currentTarget,\r\n    });\r\n  };\r\n  handleLikesDialog = () => {\r\n    this.setState({ likesDialogOpen: !this.state.likesDialogOpen });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContextApi.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <>\r\n                <Hidden xsDown>\r\n                  <Dialog\r\n                    open\r\n                    onClose={this.props.dialogClose}\r\n                    fullWidth\r\n                    maxWidth=\"md\"\r\n                    style={{ margin: \"auto\" }}\r\n                  >\r\n                    <DialogContent\r\n                      style={{\r\n                        overflow: \"hidden\",\r\n                        padding: 0,\r\n                      }}\r\n                    >\r\n                      <Grid container direction=\"row\">\r\n                        <Grid item xs={8} style={{ position: \"relative\" }}>\r\n                          <SwipeableViews\r\n                            index={this.state.activestep}\r\n                            enableMouseEvents\r\n                            style={{ objectFit: \"cover\", position: \"relative\" }}\r\n                            className=\"swipable\"\r\n                          >\r\n                            {this.props.images.map((e) => (\r\n                              <img\r\n                                src={`https://saiteja0413.pythonanywhere.com${e[\"image\"]}`}\r\n                                height=\"400px\"\r\n                                className=\"post-image\"\r\n                              />\r\n                            ))}\r\n                          </SwipeableViews>\r\n                          {this.props.images.length > 1 && (\r\n                            <MobileStepper\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                background: \"transparent\",\r\n                              }}\r\n                              steps={this.props.images.length}\r\n                              className=\"stepper\"\r\n                              variant=\"none\"\r\n                              backButton={\r\n                                <Button\r\n                                  disableRipple\r\n                                  disabled={this.state.activestep === 0}\r\n                                  disableTouchRipple\r\n                                  style={\r\n                                    this.state.activestep === 0\r\n                                      ? { opacity: 0 }\r\n                                      : { color: \"white\" }\r\n                                  }\r\n                                  onClick={() => {\r\n                                    this.setState({\r\n                                      activestep: this.state.activestep - 1,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <KeyboardArrowLeftIcon\r\n                                    style={{\r\n                                      background: \"white\",\r\n                                      borderRadius: \"50%\",\r\n                                      fontSize: \"1rem\",\r\n                                      color: \"black\",\r\n                                    }}\r\n                                  />\r\n                                </Button>\r\n                              }\r\n                              nextButton={\r\n                                this.state.activestep !==\r\n                                  this.props.images.length - 1 && (\r\n                                  <Button\r\n                                    disableRipple\r\n                                    disableTouchRipple\r\n                                    style={{ color: \"white\" }}\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        activestep: this.state.activestep + 1,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    <KeyboardArrowRightIcon\r\n                                      style={{\r\n                                        background: \"white\",\r\n                                        borderRadius: \"50%\",\r\n                                        fontSize: \"1rem\",\r\n                                        color: \"black\",\r\n                                      }}\r\n                                    />\r\n                                  </Button>\r\n                                )\r\n                              }\r\n                            />\r\n                          )}\r\n                        </Grid>\r\n                        <Grid item container xs={4} direction=\"column\">\r\n                          <Grid item xs={2} style={{ minWidth: \"100%\" }}>\r\n                            <CardHeader\r\n                              title={\r\n                                <Typography\r\n                                  variant=\"body1\"\r\n                                  component={Link}\r\n                                  to={`otheruser/${this.props.username}`}\r\n                                  style={{\r\n                                    textDecoration: \"none\",\r\n                                    color: \"black\",\r\n                                  }}\r\n                                >\r\n                                  {this.props.username}\r\n                                </Typography>\r\n                              }\r\n                              avatar={\r\n                                <Avatar\r\n                                  src={`https://saiteja0413.pythonanywhere.com${this.props.profilepic}`}\r\n                                />\r\n                              }\r\n                              action={\r\n                                <IconButton onClick={this.handledialogClick}>\r\n                                  <MoreVertIcon />\r\n                                </IconButton>\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                          <Divider />\r\n                          <Grid\r\n                            item\r\n                            direction=\"column\"\r\n                            style={{\r\n                              height: \"300px\",\r\n                              minWidth: \"100%\",\r\n                              overflowX: \"hidden\",\r\n                              overflowY: \"scroll\",\r\n                              scrollbarWidth: \"none\",\r\n                              paddingLeft: \"6px\",\r\n                            }}\r\n                          >\r\n                            {this.state.comments.length === 0 && (\r\n                              <Typography variant=\"body1\">\r\n                                Be the first to comment!\r\n                              </Typography>\r\n                            )}\r\n                            {this.state.comments.length !== 0 &&\r\n                              this.state.comments.map((e) => (\r\n                                <>\r\n                                  <Popover\r\n                                    id=\"simple-popup\"\r\n                                    open={this.state.popupOpen}\r\n                                    anchorEl={this.state.anchorEl}\r\n                                    anchorOrigin={{\r\n                                      vertical: \"top\",\r\n                                      horizontal: \"center\",\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                      vertical: \"top\",\r\n                                      horizontal: \"center\",\r\n                                    }}\r\n                                    onClose={this.handlePopOver}\r\n                                  >\r\n                                    <List>\r\n                                      <ListItem\r\n                                        dividers\r\n                                        button\r\n                                        onClick={() => {\r\n                                          object.deleteComment(\r\n                                            e[\"comment\"][\"id\"]\r\n                                          );\r\n                                          this.setState({\r\n                                            popupOpen: false,\r\n                                            newComment: \"dd\",\r\n                                          });\r\n                                        }}\r\n                                      >\r\n                                        <ListItemText>\r\n                                          <Typography\r\n                                            variant=\"body2\"\r\n                                            color=\"secondary\"\r\n                                          >\r\n                                            Delete Comment\r\n                                          </Typography>\r\n                                        </ListItemText>\r\n                                      </ListItem>\r\n                                      <ListItem\r\n                                        button\r\n                                        onClick={this.handlePopOver}\r\n                                      >\r\n                                        <ListItemText>\r\n                                          <Typography variant=\"body2\">\r\n                                            cancel\r\n                                          </Typography>\r\n                                        </ListItemText>\r\n                                      </ListItem>\r\n                                    </List>\r\n                                  </Popover>\r\n                                  <Grid item container xs justify=\"center\">\r\n                                    <Grid\r\n                                      item\r\n                                      xs={1}\r\n                                      style={{\r\n                                        textAlign: \"middle\",\r\n                                        padding: \"4px\",\r\n                                      }}\r\n                                    >\r\n                                      <Avatar\r\n                                        style={{\r\n                                          width: \"24px\",\r\n                                          height: \"24px\",\r\n                                          margin: \"3px auto\",\r\n                                        }}\r\n                                        src={`https://saiteja0413.pythonanywhere.com${e[\"profilepic\"]}`}\r\n                                      />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs\r\n                                      style={{ paddingLeft: \"10px\" }}\r\n                                    >\r\n                                      <Typography>\r\n                                        <span\r\n                                          style={{\r\n                                            fontWeight: \"bold\",\r\n                                            fontSize: \"0.89rem\",\r\n                                          }}\r\n                                        >\r\n                                          {e[\"comment\"][\"name\"]}\r\n                                        </span>{\" \"}\r\n                                        <span style={{ fontSize: \"0.8rem\" }}>\r\n                                          {e[\"comment\"][\"comment\"]}\r\n                                        </span>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    {e[\"comment\"][\"name\"] ===\r\n                                      object[\"userdetails\"][\"user\"][\r\n                                        \"username\"\r\n                                      ] && (\r\n                                      <Grid item>\r\n                                        <IconButton>\r\n                                          <MoreVertIcon\r\n                                            id=\"simple-popup\"\r\n                                            onClick={this.handlePopOver}\r\n                                          />\r\n                                        </IconButton>\r\n                                      </Grid>\r\n                                    )}\r\n                                  </Grid>\r\n                                </>\r\n                              ))}\r\n                          </Grid>\r\n\r\n                          <Grid\r\n                            item\r\n                            container\r\n                            direction=\"column\"\r\n                            xs={2}\r\n                            style={{\r\n                              minWidth: \"100%\",\r\n                              position: \"relative\",\r\n                            }}\r\n                          >\r\n                            <Grid item>\r\n                              <Checkbox\r\n                                size=\"small\"\r\n                                icon={<FavoriteBorder />}\r\n                                checkedIcon={<Favorite />}\r\n                                name=\"checkedH\"\r\n                                checked={this.state.isLiked}\r\n                                onChange={this.handleLikesDialog}\r\n                                onClick={() => {\r\n                                  !this.state.isLiked\r\n                                    ? object.increaseLike(this.props.id)\r\n                                    : object.decreaseLike(this.props.id);\r\n                                }}\r\n                              />\r\n                              <IconButton\r\n                                onClick={() => {\r\n                                  this.myinp.current.focus();\r\n                                }}\r\n                              >\r\n                                <ModeCommentOutlinedIcon\r\n                                  style={{ fontSize: \"1.2rem\" }}\r\n                                />\r\n                              </IconButton>\r\n                              <Checkbox\r\n                                size=\"small\"\r\n                                style={{ position: \"absolute\", right: \"10px\" }}\r\n                                icon={<BookmarkBorderIcon />}\r\n                                checkedIcon={\r\n                                  <BookmarkIcon style={{ color: \"black\" }} />\r\n                                }\r\n                                name=\"checkedH\"\r\n                                checked={this.state.isBookmarked}\r\n                                onChange={() => {\r\n                                  this.setState({\r\n                                    isBookmarked: !this.state.isBookmarked,\r\n                                  });\r\n                                }}\r\n                                onClick={() => {\r\n                                  !this.state.isBookmarked\r\n                                    ? object.savePost(this.props.id)\r\n                                    : object.unsavePost(this.props.id);\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item>\r\n                              <Typography\r\n                                variant=\"subtitle2\"\r\n                                component=\"p\"\r\n                                onClick={this.handleLikesDialog}\r\n                                style={{ cursor: \"pointer\" }}\r\n                              >\r\n                                <span\r\n                                  style={{ fontWeight: \"bold\", margin: \"4px\" }}\r\n                                >\r\n                                  {this.props.likes} likes\r\n                                </span>\r\n                              </Typography>\r\n                              {this.props.figcaption !== \"\" && (\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  style={{\r\n                                    marginLeft: \"4px\",\r\n                                    textDecoration: \"none\",\r\n                                  }}\r\n                                  component={Link}\r\n                                  to={`otheruser/${this.props.username}`}\r\n                                  style={{\r\n                                    textDecoration: \"none\",\r\n                                    color: \"black\",\r\n                                  }}\r\n                                >\r\n                                  <span\r\n                                    style={{\r\n                                      fontWeight: \"bold\",\r\n                                      marginLeft: \"4px\",\r\n                                    }}\r\n                                  >\r\n                                    {this.props.username}\r\n                                  </span>{\" \"}\r\n                                  {this.props.figcaption}\r\n                                </Typography>\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs\r\n                            style={{\r\n                              minWidth: \"100%\",\r\n                              alignItems: \"flex-end\",\r\n                              verticalAlign: \"bottom\",\r\n                            }}\r\n                          >\r\n                            <TextField\r\n                              style={{\r\n                                margin: \"0px 4px\",\r\n                                width: \"90%\",\r\n                                fontSize: \"0.58rem\",\r\n                                paddingLeft: \"10px\",\r\n                              }}\r\n                              inputRef={this.myinp}\r\n                              onChange={(e) => this.handleComment(e)}\r\n                              placeholder=\"Add a comment\"\r\n                              InputProps={{\r\n                                endAdornment: (\r\n                                  <InputAdornment position=\"end\">\r\n                                    <Button\r\n                                      color=\"primary\"\r\n                                      size=\"small\"\r\n                                      disabled={\r\n                                        this.state.comment === \"\" ||\r\n                                        this.state.comment.indexOf(\" \") == 0\r\n                                      }\r\n                                      style={{ fontSize: \"0.7rem\" }}\r\n                                      onClick={() => {\r\n                                        object.addComment(\r\n                                          this.props.id,\r\n                                          this.state.comment\r\n                                        );\r\n                                        this.setState({\r\n                                          newComment: this.state.comment,\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      post\r\n                                    </Button>\r\n                                  </InputAdornment>\r\n                                ),\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </Hidden>\r\n\r\n                <MoreVert\r\n                  open={this.state.isDialogopen}\r\n                  handleClose={this.handledialogClick}\r\n                  username={this.props.username}\r\n                  id={this.props.id}\r\n                />\r\n\r\n                <Likes\r\n                  open={this.state.likesDialogOpen}\r\n                  handleClose={this.handleLikesDialog}\r\n                  owner={object[\"userdetails\"][\"user\"][\"username\"]}\r\n                  id={this.props.id}\r\n                />\r\n              </>\r\n            );\r\n          }}\r\n        </ContextApi.Consumer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostImage;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  IconButton,\r\n  DialogContent,\r\n  TextField,\r\n  Hidden,\r\n  List,\r\n  ListItem,\r\n  DialogActions,\r\n  Collapse,\r\n  Divider,\r\n  Tabs,\r\n  Tab,\r\n} from \"@material-ui/core\";\r\nimport PostImage from \"./postimage\";\r\nimport ViewDayIcon from \"@material-ui/icons/ViewDay\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport \"./css/profile.css\";\r\nimport PostImageFull from \"./postimagefull\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport CardHead from \"./cardheader\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport UnfriendAlert from \"./unfriendalert\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { getToken, getUsername } from \"./common\";\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.usernameRef = new React.createRef();\r\n    this.nicknameRef = new React.createRef();\r\n    this.emailRef = new React.createRef();\r\n  }\r\n  state = {\r\n    photos: [\r\n      \"IMG_20190927_152212.jpg\",\r\n      \"IMG_20200526_234547.jpg\",\r\n      \"Screenshot_2019-12-10-19-22-36-37.png\",\r\n      \"destination_7.jpg\",\r\n      \"IMG20190618153325.jpg\",\r\n    ],\r\n    bioDialogOpen: false,\r\n    profileDialogOpen: false,\r\n    newBio: \"\",\r\n    friendsDialogOpen: false,\r\n    PostImageDialog: false,\r\n    tabsValue: \"one\",\r\n    newProfilePic: \"\",\r\n    unfriendAlertOpen: false,\r\n    newBioChanged: \"\",\r\n    usernameChanged: \"\",\r\n    nicknameChanged: \"\",\r\n    emailChanged: \"\",\r\n    activedetails: {\r\n      id: 0,\r\n      images: [],\r\n      username: \"\",\r\n      figcaption: \"\",\r\n      likes: 0,\r\n      profilepic: \"\",\r\n    },\r\n    saved: [\r\n      {\r\n        post: {},\r\n      },\r\n    ],\r\n    friendsList: [],\r\n    isrequested: null,\r\n    friend: null,\r\n    activefriend: {},\r\n    userdetails: {\r\n      user: \"\",\r\n    },\r\n    userposts: [\r\n      {\r\n        images: [\r\n          {\r\n            image: \"\",\r\n          },\r\n        ],\r\n        post: {},\r\n      },\r\n    ],\r\n    num_of_posts: \"\",\r\n    num_of_friends: \"\",\r\n    newProfilePic1: \"\",\r\n    profilepic2: \"\",\r\n    errorOpen: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    AOS.init({ duration: 600 });\r\n    this.getrandomProfile();\r\n    this.getSavedPosts();\r\n    this.getFriendsList();\r\n    this.checkForFriend();\r\n  };\r\n\r\n  // get user friends list\r\n  getFriendsList = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"GET\",\r\n      `https://saiteja0413.pythonanywhere.com/api/get_user_friends${this.props.match.params.username}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        this.setState({ friendsList: res[\"friends\"] });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  //set the current active details for colum view pic onClick\r\n  setDetails = (id, profilepic, username, images, likes, figcaption) => {\r\n    var activedetails = {\r\n      id: id,\r\n      profilepic: profilepic,\r\n      username: username,\r\n      images: images,\r\n      likes: likes,\r\n      figcaption: figcaption,\r\n    };\r\n    this.setState({ activedetails });\r\n    this.setState({ PostImageDialog: true });\r\n  };\r\n\r\n  //get the users saved posts\r\n  getSavedPosts = () => {\r\n    var xhr = new XMLHttpRequest();\r\n\r\n    xhr.open(\r\n      \"GET\",\r\n      `https://saiteja0413.pythonanywhere.com/api/get_saved_posts`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        this.setState({ saved: res[\"saved\"] });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  //handle new bio changed\r\n  handleBioDialog = () => {\r\n    this.setState({\r\n      newBioChanged: this.state.newBio,\r\n      bioDialogOpen: !this.state.bioDialogOpen,\r\n    });\r\n    var xhr = new XMLHttpRequest();\r\n    var params = \"bio=\" + this.state.newBio;\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/update_user_desc1${getUsername()}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        console.log(res);\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n    xhr.send(params);\r\n  };\r\n\r\n  //handle edit profile dialog\r\n  handleProfileDialog = () => {\r\n    this.setState({ profileDialogOpen: !this.state.profileDialogOpen });\r\n  };\r\n\r\n  //set the new bio onchange in input\r\n  handleNewBio = (e) => {\r\n    this.setState({ newBio: e.target.value });\r\n  };\r\n\r\n  //to handle the user friends list dialog\r\n  handleFriendsDialog = () => {\r\n    this.setState({ friendsDialogOpen: !this.state.friendsDialogOpen });\r\n  };\r\n\r\n  //to handle the post clicked in grid row view\r\n  handlePostImageDialog = () => {\r\n    this.setState({ PostImageDialog: !this.state.PostImageDialog });\r\n  };\r\n\r\n  //to display the new profile pic selected\r\n  handleNewProfilePic = (e) => {\r\n    var freader = new FileReader();\r\n    this.setState({ profilepic2: e.target.files[0] });\r\n    freader.readAsDataURL(e.target.files[0]);\r\n    freader.onloadend = (event) => {\r\n      this.setState({ newProfilePic: event.target.result });\r\n    };\r\n  };\r\n\r\n  //handle between the tabs to switch\r\n  handleTabs = (e, newValue) => {\r\n    this.setState({ tabsValue: newValue });\r\n  };\r\n\r\n  //open unfriend or unsend request dialog\r\n  handleUnfreind = () => {\r\n    this.setState({ unfriendAlertOpen: !this.state.unfriendAlertOpen });\r\n  };\r\n\r\n  //check the visited profile is a friend of our owner\r\n  checkForFriend = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"GET\",\r\n      `https://saiteja0413.pythonanywhere.com/api/checkFriend1${this.props.match.params.username}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        if (res[\"friend\"] == \"yes\") {\r\n          this.setState({ friend: true });\r\n        } else if (res[\"friend\"] == \"no\") {\r\n          this.setState({ friend: false });\r\n        } else {\r\n          this.setState({ isrequested: true });\r\n        }\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  //get the visited users posts and information\r\n  getrandomProfile = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/getuserprofile${this.props.match.params.username}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        this.setState({\r\n          userdetails: res[\"userdata\"],\r\n          userposts: res[\"details\"],\r\n          num_of_posts: res[\"num_of_posts\"],\r\n          num_of_friends: res[\"num_of_friends\"],\r\n        });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n\r\n  //submit the new profile\r\n  submitNewProfile = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    var formdata = new FormData();\r\n    formdata.append(\"image\", this.state.profilepic2);\r\n    formdata.append(\"username\", this.usernameRef.current.value.toLowerCase());\r\n    formdata.append(\"nickname\", this.nicknameRef.current.value);\r\n    formdata.append(\"email\", this.emailRef.current.value);\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/update_user1${this.props.match.params.username}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n\r\n        if (res[\"status\"] == \"username\") {\r\n          this.setState({ errorOpen: true });\r\n        } else {\r\n          this.setState({\r\n            userdetails: {\r\n              ...this.state.userdetails,\r\n              name: this.nicknameRef.current.value,\r\n              user: {\r\n                ...this.state.userdetails.user,\r\n                username: this.usernameRef.current.value,\r\n                email: this.emailRef.current.value,\r\n              },\r\n            },\r\n            newProfilePic1: this.state.newProfilePic,\r\n            profileDialogOpen: false,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    xhr.send(formdata);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContextApi.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <>\r\n                <Paper className=\"profile-paper\">\r\n                  <Grid container direction=\"column\" spacing={5}>\r\n                    <Grid\r\n                      container\r\n                      spacing={2}\r\n                      direction=\"row\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <Grid item xs={3} sm>\r\n                        <Hidden xsDown>\r\n                          <Avatar\r\n                            src={\r\n                              this.state.newProfilePic1 === \"\"\r\n                                ? `https://saiteja0413.pythonanywhere.com${this.state[\"userdetails\"][\"image\"]}`\r\n                                : this.state.newProfilePic\r\n                            }\r\n                            alt={this.state[\"userdetails\"][\"user\"][\"username\"]}\r\n                            style={{ width: \"130px\", height: \"130px\" }}\r\n                          />\r\n                        </Hidden>\r\n                        <Hidden smUp>\r\n                          <Avatar\r\n                            src={\r\n                              this.state.newProfilePic1 === \"\"\r\n                                ? `https://saiteja0413.pythonanywhere.com${this.state[\"userdetails\"][\"image\"]}`\r\n                                : this.state.newProfilePic\r\n                            }\r\n                            alt={this.state[\"userdetails\"][\"user\"][\"username\"]}\r\n                            style={{\r\n                              width: \"70px\",\r\n                              height: \"70px\",\r\n                              marginLeft: \"4px\",\r\n                            }}\r\n                          />\r\n                        </Hidden>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        spacing={1}\r\n                        xs={9}\r\n                        sm={8}\r\n                        alignItems=\"flex-start\"\r\n                        direction=\"column\"\r\n                      >\r\n                        <Grid item xs={12} style={{ paddingLeft: \"10px\" }}>\r\n                          <Hidden xsDown>\r\n                            <Typography variant=\"h5\">\r\n                              {this.state[\"userdetails\"][\"user\"][\"username\"]}\r\n                              <VerifiedUserIcon size=\"small\" />\r\n                            </Typography>\r\n                          </Hidden>\r\n                          <Hidden smUp>\r\n                            <Typography\r\n                              variant=\"h6\"\r\n                              style={{ marginLeft: \"20px\" }}\r\n                            >\r\n                              {this.state[\"userdetails\"][\"user\"][\"username\"]}\r\n                              {this.state[\"userdetails\"][\"user\"][\"username\"] ===\r\n                                \"saiteja\" && (\r\n                                <VerifiedUserIcon\r\n                                  style={{ fontSize: \"0.79rem\" }}\r\n                                />\r\n                              )}\r\n                            </Typography>\r\n                          </Hidden>\r\n                        </Grid>\r\n                        <Grid item container style={{ minWidth: \"100%\" }}>\r\n                          <Grid item xs sm={3} style={{ textAlign: \"center\" }}>\r\n                            <Typography component=\"p\" color=\"textSecondary\">\r\n                              {this.state[\"num_of_posts\"]} posts\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs sm={4}>\r\n                            <Typography\r\n                              color=\"textSecondary\"\r\n                              style={{ cursor: \"pointer\" }}\r\n                              onClick={this.handleFriendsDialog}\r\n                              component=\"p\"\r\n                            >\r\n                              {this.state[\"num_of_friends\"]} Friends\r\n                            </Typography>\r\n                          </Grid>\r\n                          {this.props.match.params.username ===\r\n                            getUsername() && (\r\n                            <>\r\n                              <Hidden xsDown>\r\n                                <Grid item xs>\r\n                                  <Button\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                    style={{ fontSize: \"0.65rem\" }}\r\n                                    onClick={this.handleProfileDialog}\r\n                                  >\r\n                                    Edit Profile\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Hidden>\r\n                            </>\r\n                          )}\r\n                          {this.props.match.params.username !==\r\n                            getUsername() && (\r\n                            <Hidden xsDown>\r\n                              {this.state.isrequested ? (\r\n                                <Grid item xs>\r\n                                  <Button\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    style={{\r\n                                      fontSize: \"0.57rem\",\r\n                                      textTransform: \"capitalize\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        activefriend: {\r\n                                          image: this.state.userdetails.image,\r\n                                          action: \"unsend\",\r\n                                        },\r\n                                      });\r\n                                      this.handleUnfreind();\r\n                                    }}\r\n                                  >\r\n                                    Requested\r\n                                  </Button>\r\n                                </Grid>\r\n                              ) : this.state.friend ? (\r\n                                <Grid item xs>\r\n                                  <Button\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    style={{\r\n                                      fontSize: \"0.57rem\",\r\n                                      textTransform: \"capitalize\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        activefriend: {\r\n                                          image: this.state.userdetails.image,\r\n                                          action: \"unfriend\",\r\n                                        },\r\n                                      });\r\n                                      this.handleUnfreind();\r\n                                    }}\r\n                                  >\r\n                                    Friends\r\n                                  </Button>\r\n                                </Grid>\r\n                              ) : (\r\n                                <Grid item xs>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    style={{\r\n                                      fontSize: \"0.57rem\",\r\n                                      textTransform: \"capitalize\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                      object.sendRequest(\r\n                                        this.props.match.params.username\r\n                                      );\r\n                                      this.setState({ isrequested: true });\r\n                                    }}\r\n                                  >\r\n                                    Follow\r\n                                  </Button>\r\n                                </Grid>\r\n                              )}\r\n                            </Hidden>\r\n                          )}\r\n                        </Grid>\r\n                        {this.props.match.params.username === getUsername() && (\r\n                          <Hidden smUp>\r\n                            <Grid\r\n                              item\r\n                              xs\r\n                              style={{ minWidth: \"100%\", textAlign: \"center\" }}\r\n                            >\r\n                              <Button\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                style={{\r\n                                  fontSize: \"0.65rem\",\r\n                                  width: \"80%\",\r\n                                  margin: \"0px auto\",\r\n                                }}\r\n                                onClick={this.handleProfileDialog}\r\n                              >\r\n                                Edit Profile\r\n                              </Button>\r\n                            </Grid>\r\n                          </Hidden>\r\n                        )}\r\n                        {this.props.match.params.username !== getUsername() && (\r\n                          <Hidden smUp>\r\n                            {this.state.isrequested ? (\r\n                              <Grid\r\n                                item\r\n                                xs\r\n                                style={{\r\n                                  minWidth: \"100%\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              >\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  style={{\r\n                                    fontSize: \"0.65rem\",\r\n                                    width: \"80%\",\r\n                                    margin: \"0px auto\",\r\n                                    textTransform: \"capitalize\",\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    this.setState({\r\n                                      activefriend: {\r\n                                        image: this.state.userdetails.image,\r\n                                        action: \"unsend\",\r\n                                      },\r\n                                    });\r\n                                    this.handleUnfreind();\r\n                                  }}\r\n                                >\r\n                                  Requested\r\n                                </Button>\r\n                              </Grid>\r\n                            ) : this.state.friend ? (\r\n                              <Grid\r\n                                item\r\n                                xs\r\n                                style={{\r\n                                  minWidth: \"100%\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              >\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  style={{\r\n                                    fontSize: \"0.65rem\",\r\n                                    width: \"80%\",\r\n                                    margin: \"0px auto\",\r\n                                    textTransform: \"capitalize\",\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    this.setState({\r\n                                      activefriend: {\r\n                                        image: this.state.userdetails.image,\r\n                                        action: \"unfriend\",\r\n                                      },\r\n                                    });\r\n                                    this.handleUnfreind();\r\n                                  }}\r\n                                >\r\n                                  Friends\r\n                                </Button>\r\n                              </Grid>\r\n                            ) : (\r\n                              <Grid\r\n                                item\r\n                                xs\r\n                                style={{\r\n                                  minWidth: \"100%\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              >\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  size=\"small\"\r\n                                  style={{\r\n                                    fontSize: \"0.65rem\",\r\n                                    width: \"80%\",\r\n                                    margin: \"0px auto\",\r\n                                    textTransform: \"capitalize\",\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    object.sendRequest(\r\n                                      this.props.match.params.username\r\n                                    );\r\n                                    this.setState({ isrequested: true });\r\n                                  }}\r\n                                >\r\n                                  Follow\r\n                                </Button>\r\n                              </Grid>\r\n                            )}\r\n                          </Hidden>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item container spacing={2} direction=\"column\" xs={12}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h6\">\r\n                          {this.state[\"userdetails\"][\"name\"]}\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} style={{ whiteSpace: \"wrap\" }}>\r\n                        {this.state.newBioChanged !== \"\" && (\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: this.state.newBioChanged,\r\n                            }}\r\n                            style={{ whiteSpace: \"pre-wrap\" }}\r\n                          />\r\n                        )}\r\n                        {this.state.newBioChanged === \"\" && (\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: this.state.userdetails.desc,\r\n                            }}\r\n                            style={{\r\n                              whiteSpace: \"pre-wrap\",\r\n                              fontSize: \"0.9rem\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                      {this.props.match.params.username === getUsername() && (\r\n                        <Grid item>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              this.setState({ bioDialogOpen: true });\r\n                            }}\r\n                            size=\"small\"\r\n                            style={{ fontSize: \"0.7rem\" }}\r\n                          >\r\n                            Edit bio\r\n                          </Button>\r\n                        </Grid>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n\r\n                {!this.state.friend &&\r\n                  this.state[\"userdetails\"][\"user\"][\"username\"] !==\r\n                    getUsername() && (\r\n                    <Paper\r\n                      style={{\r\n                        width: \"100%\",\r\n                        padding: \"6px\",\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        style={{\r\n                          margin: \"0px auto\",\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        You must be a friend of{\" \"}\r\n                        <strong>{this.props.match.params.username} </strong> to\r\n                        see their posts\r\n                      </Typography>\r\n                    </Paper>\r\n                  )}\r\n                {(this.state.friend ||\r\n                  this.props.match.params.username === getUsername()) && (\r\n                  <>\r\n                    <Hidden smUp>\r\n                      {this.state.userposts.length !== 0 && (\r\n                        <Paper style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                          <Tabs\r\n                            value={this.state.tabsValue}\r\n                            style={\r\n                              this.props.match.params.username === getUsername()\r\n                                ? { maxWidth: \"200px\", margin: \"0px auto\" }\r\n                                : {\r\n                                    maxWidth: \"150px\",\r\n                                    margin: \"0px auto\",\r\n                                  }\r\n                            }\r\n                            onChange={this.handleTabs}\r\n                          >\r\n                            <Tab value=\"one\" label={<AppsIcon />}></Tab>\r\n\r\n                            <Tab value=\"two\" label={<ViewDayIcon />}></Tab>\r\n\r\n                            {this.props.match.params.username ===\r\n                              getUsername() && (\r\n                              <Tab value=\"three\" label={<BookmarkIcon />}></Tab>\r\n                            )}\r\n                          </Tabs>\r\n                        </Paper>\r\n                      )}\r\n                    </Hidden>\r\n\r\n                    <Hidden xsDown>\r\n                      {this.props.match.params.username === getUsername() &&\r\n                        this.state.userposts.length !== 0 && (\r\n                          <Paper style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                            <Tabs\r\n                              value={this.state.tabsValue}\r\n                              style={{\r\n                                margin: \" 0px auto\",\r\n\r\n                                maxWidth: \"300px\",\r\n                              }}\r\n                              onChange={this.handleTabs}\r\n                            >\r\n                              <Tab value=\"one\" label={<AppsIcon />}></Tab>\r\n\r\n                              <Tab value=\"three\" label={<BookmarkIcon />}></Tab>\r\n                            </Tabs>\r\n                          </Paper>\r\n                        )}\r\n                    </Hidden>\r\n                  </>\r\n                )}\r\n                {this.state.tabsValue === \"one\" &&\r\n                  (this.state.friend ||\r\n                    this.props.match.params.username == getUsername()) && (\r\n                    <Grid\r\n                      container\r\n                      className=\"images-grid\"\r\n                      style={{ margin: \"0px auto\" }}\r\n                    >\r\n                      {this.state[\"userposts\"].map((e) => {\r\n                        return (\r\n                          <>\r\n                            <Grid item xs={4} className=\"image-in-grid\">\r\n                              <img\r\n                                src={`https://saiteja0413.pythonanywhere.com${e[\"images\"][0][\"image\"]}`}\r\n                                width=\"100%\"\r\n                                style={{ cursor: \"pointer\" }}\r\n                              />\r\n                              <div\r\n                                className=\"likes-and-comments\"\r\n                                onClick={() => {\r\n                                  this.setDetails(\r\n                                    e[\"post\"][\"id\"],\r\n                                    this.state[\"userdetails\"][\"image\"],\r\n                                    this.state[\"userdetails\"][\"user\"][\r\n                                      \"username\"\r\n                                    ],\r\n                                    e[\"images\"],\r\n                                    e[\"post\"][\"likes\"],\r\n                                    e[\"post\"][\"figcaption\"]\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <div className=\"hover-likes\">\r\n                                  <Typography>\r\n                                    {e[\"post\"][\"likes\"]}\r\n                                    <FavoriteIcon size=\"small\" />{\" \"}\r\n                                  </Typography>\r\n                                </div>\r\n                              </div>\r\n                            </Grid>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  )}\r\n                {this.state.tabsValue == \"two\" &&\r\n                  this.state[\"userposts\"].map((e) => (\r\n                    <PostImageFull\r\n                      username={this.state[\"userdetails\"][\"user\"][\"username\"]}\r\n                      likes={e[\"post\"][\"likes\"]}\r\n                      figcaption={e[\"post\"][\"figcaption\"]}\r\n                      images={e[\"images\"]}\r\n                      id={e[\"post\"][\"id\"]}\r\n                      profilepic={this.state[\"userdetails\"][\"image\"]}\r\n                    />\r\n                  ))}\r\n                {this.state.tabsValue == \"three\" && (\r\n                  <Paper\r\n                    style={{\r\n                      width: \"100%\",\r\n                      textAlign: \"center\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    {this.state.saved.length === 0 ? (\r\n                      <Typography style={{ marginTop: \"50px\" }} variant=\"body1\">\r\n                        You have no saved posts\r\n                      </Typography>\r\n                    ) : (\r\n                      <Grid\r\n                        container\r\n                        className=\"images-grid\"\r\n                        style={{ margin: \"0px auto\" }}\r\n                      >\r\n                        {this.state.saved.map((e) => {\r\n                          return (\r\n                            <>\r\n                              <Grid item xs={4} className=\"image-in-grid\">\r\n                                <img\r\n                                  src={`https://saiteja0413.pythonanywhere.com${e[\"details\"][\"images\"][0][\"image\"]}`}\r\n                                  width=\"100%\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                />\r\n                                <div\r\n                                  className=\"likes-and-comments\"\r\n                                  onClick={() => {\r\n                                    this.setDetails(\r\n                                      e[\"details\"][\"post\"][\"id\"],\r\n                                      e[\"profilepic\"],\r\n                                      e[\"details\"][\"post\"][\"username\"],\r\n                                      e[\"details\"][\"images\"],\r\n                                      e[\"details\"][\"post\"][\"likes\"],\r\n                                      e[\"details\"][\"post\"][\"figcaption\"]\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  <div className=\"hover-likes\">\r\n                                    <Typography>\r\n                                      {e[\"details\"][\"post\"][\"likes\"]}\r\n                                      <FavoriteIcon size=\"small\" />{\" \"}\r\n                                    </Typography>\r\n                                  </div>\r\n                                </div>\r\n                              </Grid>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </Grid>\r\n                    )}\r\n                  </Paper>\r\n                )}\r\n                <Hidden xsDown>\r\n                  <Dialog\r\n                    data-aos=\"zoom-out\"\r\n                    open={this.state.bioDialogOpen}\r\n                    fullWidth\r\n                    maxWidth=\"xs\"\r\n                    onClose={() => {\r\n                      this.setState({ bioDialogOpen: false });\r\n                    }}\r\n                  >\r\n                    <DialogTitle style={{ height: \"40px\", padding: 0 }}>\r\n                      <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Grid item xs={1}></Grid>\r\n                        <Grid item xs={8} style={{ textAlign: \"center\" }}>\r\n                          <Typography variant=\"body2\">Edit Bio</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2} style={{ textAlign: \"right\" }}>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              this.setState({ bioDialogOpen: false });\r\n                            }}\r\n                          >\r\n                            <CloseIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent>\r\n                      <TextField\r\n                        multiline\r\n                        rows={3}\r\n                        rowsMax={8}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        label=\" New Bio\"\r\n                        placeholder=\"Enter your new bio here\"\r\n                        style={{ whiteSpace: \"wrap\" }}\r\n                        onChange={(e) => this.handleNewBio(e)}\r\n                        defaultValue={\r\n                          this.state.newBioChanged !== \"\"\r\n                            ? this.state.newBio\r\n                            : this.state[\"userdetails\"][\"desc\"]\r\n                        }\r\n                      />\r\n                      {this.state.newBio !== \"\" &&\r\n                        this.state.newBio.indexOf(\" \") != 0 && (\r\n                          <DialogActions>\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              size=\"small\"\r\n                              style={{ fontSize: \"0.7rem\" }}\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                this.handleBioDialog();\r\n                              }}\r\n                            >\r\n                              Update Bio\r\n                            </Button>\r\n                          </DialogActions>\r\n                        )}\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </Hidden>\r\n                <Hidden xsDown>\r\n                  <Dialog\r\n                    maxWidth=\"xs\"\r\n                    data-aos=\"zoom-out\"\r\n                    fullWidth\r\n                    style={{ overflowX: \"hidden\" }}\r\n                    open={this.state.profileDialogOpen}\r\n                  >\r\n                    <DialogTitle\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        padding: 0,\r\n                        height: \"40px\",\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body1\">Edit your profile</Typography>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent>\r\n                      <Collapse in={this.state.errorOpen}>\r\n                        <Alert severity=\"error\" variant=\"filled\">\r\n                          Username already exists\r\n                        </Alert>\r\n                      </Collapse>\r\n                      <Grid container spacing={1} direction=\"column\">\r\n                        {this.state.newProfilePic !== \"\" && (\r\n                          <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                            <Avatar\r\n                              style={{\r\n                                width: \"70px\",\r\n                                height: \"70px\",\r\n                                margin: \" 0px auto\",\r\n                              }}\r\n                              src={this.state.newProfilePic}\r\n                              alt=\"saiteja balla\"\r\n                            />\r\n                          </Grid>\r\n                        )}\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            fullWidth\r\n                            inputRef={this.usernameRef}\r\n                            size=\"small\"\r\n                            label=\"username\"\r\n                            defaultValue={\r\n                              this.state[\"userdetails\"][\"user\"][\"username\"]\r\n                            }\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label=\"name\"\r\n                            inputRef={this.nicknameRef}\r\n                            defaultValue={this.state[\"userdetails\"][\"name\"]}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label=\"Email\"\r\n                            defaultValue={\r\n                              this.state[\"userdetails\"][\"user\"][\"email\"]\r\n                            }\r\n                            inputRef={this.emailRef}\r\n                            helperText=\"Note:Providing an Iinvalid Email address you can never reset your password\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          Update profile pic -\r\n                          <input\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={this.handleNewProfilePic}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ fontSize: \"0.7rem\" }}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          this.submitNewProfile();\r\n                        }}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ fontSize: \"0.7rem\" }}\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        onClick={() => {\r\n                          this.setState({ profileDialogOpen: false });\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </Hidden>\r\n\r\n                <Hidden xsDown>\r\n                  <Dialog\r\n                    open={\r\n                      this.state.num_of_friends !== 0 &&\r\n                      this.state.friendsDialogOpen\r\n                    }\r\n                    fullWidth\r\n                    maxWidth=\"xs\"\r\n                    data-aos=\"zoom-out\"\r\n                  >\r\n                    <DialogTitle style={{ height: \"40px\", padding: 0 }}>\r\n                      <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Grid item xs={1}></Grid>\r\n                        <Grid item xs={8} style={{ textAlign: \"center\" }}>\r\n                          <Typography variant=\"body2\">\r\n                            {this.props.match.params.username === getUsername()\r\n                              ? \"Your\"\r\n                              : this.props.match.params.username}{\" \"}\r\n                            Friends\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2} style={{ textAlign: \"right\" }}>\r\n                          <IconButton onClick={this.handleFriendsDialog}>\r\n                            <CloseIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent dividers>\r\n                      {this.state.friendsList.map((e) => (\r\n                        <>\r\n                          <CardHead\r\n                            username={e[\"friend-details\"][\"user\"][\"username\"]}\r\n                            nickname={e[\"friend-details\"][\"name\"]}\r\n                            src={e[\"friend-details\"][\"image\"]}\r\n                            owner={getUsername()}\r\n                            handleClose={this.handleFriendsDialog}\r\n                            d\r\n                          />\r\n                          <Divider />{\" \"}\r\n                        </>\r\n                      ))}\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </Hidden>\r\n                <Hidden smUp>\r\n                  <Dialog\r\n                    open={this.state.bioDialogOpen}\r\n                    fullScreen\r\n                    onClose={this.handleBioDialog}\r\n                  >\r\n                    <DialogTitle style={{ padding: 0, height: \"40px\" }}>\r\n                      <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Grid item xs={2}>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              this.setState({ bioDialogOpen: false });\r\n                            }}\r\n                          >\r\n                            <KeyboardArrowLeftIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={8}\r\n                          style={{ textAlign: \"center\", justify: \"center\" }}\r\n                        >\r\n                          <Typography edge=\"end\" variant=\"body2\">\r\n                            Edit Bio\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2} style={{ textAlign: \"right\" }}></Grid>\r\n                      </Grid>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent>\r\n                      <TextField\r\n                        multiline\r\n                        rows={3}\r\n                        rowsMax={8}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        label=\" New Bio\"\r\n                        placeholder=\"Enter your new bio here\"\r\n                        style={{ whiteSpace: \"wrap\" }}\r\n                        defaultValue={\r\n                          this.state.newBioChanged !== \"\"\r\n                            ? this.state.newBioChanged\r\n                            : this.state[\"userdetails\"][\"desc\"]\r\n                        }\r\n                        onChange={(e) => this.handleNewBio(e)}\r\n                      />\r\n                      {this.state.newBio !== \"\" &&\r\n                        this.state.newBio.indexOf(\" \") != 0 && (\r\n                          <DialogActions>\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              style={{ fontSize: \"0.7rem\", padding: \"4px 6px\" }}\r\n                              color=\"primary\"\r\n                              onClick={this.handleBioDialog}\r\n                            >\r\n                              Update Bio\r\n                            </Button>\r\n                          </DialogActions>\r\n                        )}\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </Hidden>\r\n                <Hidden smUp>\r\n                  <Dialog fullScreen open={this.state.profileDialogOpen}>\r\n                    <DialogTitle style={{ textAlign: \"center\" }}>\r\n                      <Typography variant=\"h6\">Edit your profile</Typography>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent>\r\n                      <Grid container spacing={1} direction=\"column\">\r\n                        {this.state.newProfilePic !== \"\" && (\r\n                          <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                            <Avatar\r\n                              style={{\r\n                                width: \"70px\",\r\n                                height: \"70px\",\r\n                                margin: \" 0px auto\",\r\n                              }}\r\n                              src={this.state.newProfilePic}\r\n                              alt=\"saiteja balla\"\r\n                            />\r\n                          </Grid>\r\n                        )}\r\n                        <Grid item xs={8} style={{ minWidth: \"90%\" }}>\r\n                          Update profile pic -\r\n                          <input\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={this.handleNewProfilePic}\r\n                            width=\"70%\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label=\"username\"\r\n                            inputRef={this.usernameRef}\r\n                            defaultValue={\r\n                              this.state[\"userdetails\"][\"user\"][\"username\"]\r\n                            }\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label=\"name\"\r\n                            inputRef={this.nicknameRef}\r\n                            defaultValue={this.state[\"userdetails\"][\"name\"]}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            inputRef={this.emailRef}\r\n                            label=\"Email\"\r\n                            helperText=\"Note:Providing an Iinvalid Email address you can never reset your password\"\r\n                            defaultValue={\r\n                              this.state[\"userdetails\"][\"user\"][\"email\"]\r\n                            }\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ fontSize: \"0.7rem\" }}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          this.submitNewProfile();\r\n                        }}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        style={{ fontSize: \"0.7rem\" }}\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        onClick={() => {\r\n                          this.setState({ profileDialogOpen: false });\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </Hidden>\r\n                <Hidden smUp>\r\n                  <Dialog\r\n                    open={\r\n                      this.state.num_of_friends !== 0 &&\r\n                      this.state.friendsDialogOpen\r\n                    }\r\n                    fullScreen\r\n                  >\r\n                    <DialogTitle style={{ height: \"40px\", padding: 0 }}>\r\n                      <Grid\r\n                        container\r\n                        justify=\"space-between\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <Grid item xs={1} style={{ textAlign: \"left\" }}>\r\n                          <IconButton onClick={this.handleFriendsDialog}>\r\n                            <KeyboardArrowLeftIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={10} style={{ textAlign: \"center\" }}>\r\n                          <Typography variant=\"body2\">\r\n                            {this.props.match.params.username === getUsername()\r\n                              ? \"Your\"\r\n                              : this.props.match.params.username}{\" \"}\r\n                            Friends\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={1}></Grid>\r\n                      </Grid>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent dividers>\r\n                      {this.state.friendsList.map((e) => (\r\n                        <>\r\n                          <CardHead\r\n                            username={e[\"friend-details\"][\"user\"][\"username\"]}\r\n                            nickname={e[\"friend-details\"][\"name\"]}\r\n                            src={e[\"friend-details\"][\"image\"]}\r\n                            owner={getUsername()}\r\n                            handleClose={() => {\r\n                              alert(\"hh\");\r\n                              this.handleFriendsDialog();\r\n                            }}\r\n                          />\r\n                          <Divider />{\" \"}\r\n                        </>\r\n                      ))}\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </Hidden>\r\n                {this.state.PostImageDialog && (\r\n                  <PostImage\r\n                    dialogClose={this.handlePostImageDialog}\r\n                    username={this.state.activedetails.username}\r\n                    likes={this.state.activedetails.likes}\r\n                    figcaption={this.state.activedetails.figcaption}\r\n                    images={this.state.activedetails.images}\r\n                    id={this.state.activedetails.id}\r\n                    profilepic={this.state.activedetails.profilepic}\r\n                  />\r\n                )}\r\n                {this.state.PostImageDialog && (\r\n                  <Hidden smUp>\r\n                    <Dialog fullScreen open>\r\n                      <DialogTitle style={{ padding: 0, height: \"35px\" }}>\r\n                        <Grid container justify=\"center\" justify=\"center\">\r\n                          <Grid item xs={1}>\r\n                            <KeyboardArrowLeftIcon\r\n                              onClick={this.handlePostImageDialog}\r\n                              style={{\r\n                                marginTop: \"4px\",\r\n                                marginLeft: \"10px\",\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              lineHeight: \"35px\",\r\n                              height: \"35px\",\r\n                            }}\r\n                          >\r\n                            <Typography variant=\"h6\">Post</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </DialogTitle>\r\n                      <DialogContent\r\n                        dividers\r\n                        style={{\r\n                          padding: 0,\r\n                          margin: \"2px auto\",\r\n\r\n                          minWidth: \"100%\",\r\n                        }}\r\n                      >\r\n                        <PostImageFull\r\n                          username={this.state.activedetails.username}\r\n                          likes={this.state.activedetails.likes}\r\n                          figcaption={this.state.activedetails.figcaption}\r\n                          images={this.state.activedetails.images}\r\n                          id={this.state.activedetails.id}\r\n                          profilepic={this.state.activedetails.profilepic}\r\n                        />\r\n                      </DialogContent>\r\n\r\n                      <Divider />\r\n                    </Dialog>\r\n                  </Hidden>\r\n                )}\r\n\r\n                <UnfriendAlert\r\n                  open={this.state.unfriendAlertOpen}\r\n                  handleClose={this.handleUnfreind}\r\n                  image={this.state.activefriend.image}\r\n                  unsend={() => {\r\n                    object.unsendRequest(this.props.match.params.username);\r\n                    this.handleUnfreind();\r\n                    this.setState({ isrequested: false });\r\n                  }}\r\n                  unfriend={() => {\r\n                    object.removeFriend(this.props.match.params.username);\r\n                    this.setState({ friend: false });\r\n                    this.handleUnfreind();\r\n                  }}\r\n                  action={this.state.activefriend.action}\r\n                  username={this.props.match.params.username}\r\n                />\r\n              </>\r\n            );\r\n          }}\r\n        </ContextApi.Consumer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  Fab,\r\n  Button,\r\n  TextField,\r\n  Collapse,\r\n  MobileStepper,\r\n} from \"@material-ui/core\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport \"./css/profile.css\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { getUsername } from \"./common\";\r\n\r\nclass UploadPost extends Component {\r\n  state = {\r\n    images: [],\r\n    caption: \"\",\r\n    activestep: 0,\r\n    currentFile: null,\r\n    imageList: [],\r\n    image: \"\",\r\n    successdialogopen: false,\r\n  };\r\n\r\n  handleFile = (e) => {\r\n    var freader = new FileReader();\r\n    var imageList = this.state.imageList;\r\n    imageList.push(e.target.files[0]);\r\n    this.setState({ imageList, image: e.target.files[0] });\r\n    freader.readAsDataURL(e.target.files[0]);\r\n    freader.onloadend = (event) => {\r\n      var images = this.state.images;\r\n      images.push(event.target.result);\r\n      this.setState({ images });\r\n    };\r\n    this.setState({ currentFile: null });\r\n  };\r\n  handleCaption = (e) => {\r\n    this.setState({ caption: e.target.value });\r\n  };\r\n\r\n  uploadImages = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    var formdata = new FormData();\r\n    for (var i = 0; i < this.state.imageList.length; i++) {\r\n      formdata.append(\"images[\" + i + \"]\", this.state.imageList[i]);\r\n    }\r\n    formdata.append(\"caption\", this.state.caption);\r\n    formdata.append(\"length\", this.state.imageList.length);\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/upload_post1${getUsername()}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        this.setState({\r\n          successdialogopen: true,\r\n          imageList: [],\r\n          images: [],\r\n          caption: \"\",\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({ successdialogopen: false });\r\n        }, 3000);\r\n      }\r\n    };\r\n    xhr.send(formdata);\r\n  };\r\n  render() {\r\n    return (\r\n      <Paper className=\"paper-upload\">\r\n        <Typography variant=\"h6\">Upload Post</Typography>\r\n        <Divider />\r\n        <Collapse in={this.state.successdialogopen}>\r\n          <Alert>Your post has been uploaded successfully</Alert>\r\n        </Collapse>\r\n        {this.state.images.length === 0 && (\r\n          <>\r\n            <div className=\"upload-div\">\r\n              <Typography variant=\"body2\"> Select Image- </Typography>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={this.handleFile}\r\n                multiple=\"multiple\"\r\n              />\r\n            </div>\r\n            <img src={require(\"./post.png\")} className=\"upload-illust\" />\r\n          </>\r\n        )}\r\n        {this.state.images.length >= 1 && (\r\n          <div className=\"upload-div\">\r\n            <Typography variant=\"body1\">Select Another Image- </Typography>\r\n            <input\r\n              type=\"file\"\r\n              value={this.state.currentFile}\r\n              accept=\"image/*\"\r\n              onChange={this.handleFile}\r\n              multiple=\"multiple\"\r\n            />\r\n          </div>\r\n        )}{\" \"}\r\n        {this.state.images.length === 1 && (\r\n          <>\r\n            <img src={this.state.images[0]} className=\"selected-image\" />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              multiline\r\n              label=\"caption\"\r\n              size=\"small\"\r\n              rowsMax={6}\r\n              style={{\r\n                width: \"90%\",\r\n                fontSize: \"0.9rem\",\r\n                whiteSpace: \"wrap\",\r\n                marginTop: \"10px\",\r\n              }}\r\n              onChange={this.handleCaption}\r\n            />\r\n          </>\r\n        )}\r\n        {this.state.images.length > 1 && (\r\n          <>\r\n            <SwipeableViews\r\n              index={this.state.activestep}\r\n              enableMouseEvents\r\n              style={{ objectFit: \"cover\", position: \"relative\" }}\r\n              className=\"swipable\"\r\n            >\r\n              {this.state.images.map((e) => (\r\n                <img src={e} className=\"selected-image\" />\r\n              ))}\r\n            </SwipeableViews>\r\n\r\n            <MobileStepper\r\n              style={{ position: \"absolute\", background: \"transparent\" }}\r\n              steps={this.state.images.length}\r\n              className=\"stepper\"\r\n              variant=\"none\"\r\n              backButton={\r\n                <Button\r\n                  disableRipple\r\n                  disabled={this.state.activestep === 0}\r\n                  disableTouchRipple\r\n                  style={\r\n                    this.state.activestep === 0\r\n                      ? { opacity: 0 }\r\n                      : { color: \"white\" }\r\n                  }\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      activestep: this.state.activestep - 1,\r\n                    });\r\n                  }}\r\n                >\r\n                  <KeyboardArrowLeftIcon\r\n                    style={{\r\n                      background: \"gray\",\r\n                      borderRadius: \"50%\",\r\n                      fontSize: \"1rem\",\r\n                    }}\r\n                  />\r\n                </Button>\r\n              }\r\n              nextButton={\r\n                this.state.activestep !== this.state.images.length - 1 && (\r\n                  <Button\r\n                    disableRipple\r\n                    disableTouchRipple\r\n                    style={{ color: \"white\" }}\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        activestep: this.state.activestep + 1,\r\n                      });\r\n                    }}\r\n                  >\r\n                    <KeyboardArrowRightIcon\r\n                      style={{\r\n                        background: \"gray\",\r\n                        borderRadius: \"50%\",\r\n                        fontSize: \"1rem\",\r\n                      }}\r\n                    />\r\n                  </Button>\r\n                )\r\n              }\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              multiline\r\n              label=\"caption\"\r\n              size=\"small\"\r\n              rowsMax={6}\r\n              style={{\r\n                width: \"90%\",\r\n                fontSize: \"0.9rem\",\r\n                whiteSpace: \"wrap\",\r\n                marginTop: \"6px\",\r\n                marginTop: \"10px\",\r\n              }}\r\n              onChange={this.handleCaption}\r\n              value={this.state.comment}\r\n            />\r\n          </>\r\n        )}\r\n        <div className=\"upload-btn-div\">\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            style={{\r\n              textTransform: \"capitalize\",\r\n              position: \"absolute\",\r\n              right: \"10px\",\r\n              bottom: \"10px\",\r\n            }}\r\n            disabled={this.state.images.length === 0}\r\n            onClick={this.uploadImages}\r\n          >\r\n            Upload\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadPost;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  CardHeader,\r\n  Button,\r\n  Avatar,\r\n  Grid,\r\n  Typography,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport \"./css/profile.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getToken } from \"./common\";\r\n\r\nclass FriendReqCard extends Component {\r\n  state = {\r\n    accepted: false,\r\n    declined: false,\r\n  };\r\n\r\n  acceptRequest = () => {\r\n    this.setState({ accepted: true });\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/accept_request1${this.props.username}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {};\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  deleteRequest = () => {\r\n    this.setState({ declined: true });\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/delete_request1${this.props.username}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {};\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  render() {\r\n    return (\r\n      !this.state.declined && (\r\n        <>\r\n          <CardHeader\r\n            className=\"friendreq-card\"\r\n            avatar={\r\n              <>\r\n                <Hidden xsDown>\r\n                  <Avatar\r\n                    src={`https://saiteja0413.pythonanywhere.com${this.props.profilepic}`}\r\n                  />\r\n                </Hidden>\r\n                <Hidden smUp>\r\n                  <Avatar\r\n                    src={`https://saiteja0413.pythonanywhere.com${this.props.profilepic}`}\r\n                    style={{ width: \"20px\", height: \"20px\" }}\r\n                  />\r\n                </Hidden>\r\n              </>\r\n            }\r\n            title={\r\n              this.state.accepted ? (\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ textDecoration: \"none\", color: \"black\" }}\r\n                  component={Link}\r\n                  to={`otheruser/${this.props.username}`}\r\n                >\r\n                  Yor are now friends with{\" \"}\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {this.props.username}\r\n                  </span>\r\n                </Typography>\r\n              ) : (\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  style={{ textDecoration: \"none\", color: \"black\" }}\r\n                  component={Link}\r\n                  to={`otheruser/${this.props.username}`}\r\n                >\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {\" \"}\r\n                    {this.props.username}\r\n                  </span>\r\n                </Typography>\r\n              )\r\n            }\r\n            subheader={\r\n              !this.state.accepted && (\r\n                <Typography variant=\"body2\">{this.props.nickname} </Typography>\r\n              )\r\n            }\r\n            action={\r\n              !this.state.accepted && (\r\n                <>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    style={{\r\n                      margin: \"10px 4px\",\r\n                      marginLeft: \"20px\",\r\n                    }}\r\n                    onClick={this.acceptRequest}\r\n                  >\r\n                    accept\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    color=\"secondary\"\r\n                    className=\"req-button\"\r\n                    style={{\r\n                      margin: \"10px 0px\",\r\n                      marginLeft: \"0px\",\r\n                    }}\r\n                    onClick={this.deleteRequest}\r\n                  >\r\n                    Decline\r\n                  </Button>\r\n                </>\r\n              )\r\n            }\r\n          />\r\n        </>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default FriendReqCard;\r\n","import React, { Component } from \"react\";\r\nimport { Paper, Grid, Divider, Typography, Hidden } from \"@material-ui/core\";\r\nimport \"./css/profile.css\";\r\nimport FriendReqCard from \"./friendreqcard\";\r\nimport Suggestions from \"./suggestions\";\r\nimport { getToken } from \"./common\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport CardHead from \"./cardheader\";\r\n\r\nclass FriendRequest extends Component {\r\n  state = {\r\n    friendrequests: 10,\r\n    requests: [],\r\n  };\r\n  componentDidMount = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"GET\",\r\n      `https://saiteja0413.pythonanywhere.com/api/get_friend_requests1`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        console.log(res);\r\n        this.setState({ requests: res[\"requests\"] });\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Authorization\", `Token ${getToken()}`);\r\n    xhr.send();\r\n  };\r\n  render() {\r\n    return (\r\n      <ContextApi.Consumer>\r\n        {(object) => {\r\n          return (\r\n            <>\r\n              <div\r\n                style={{\r\n                  height: \"80vh\",\r\n                  overflowY: \"scroll\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <Paper className=\"friends-paper\" elevation={3}>\r\n                  {this.state.requests.length !== 0 && (\r\n                    <>\r\n                      <Typography variant=\"h6\">Friend Requests </Typography>\r\n                      <Divider />\r\n                      {this.state.requests.map((e) => (\r\n                        <>\r\n                          <FriendReqCard\r\n                            username={e[\"details\"][\"user\"][\"username\"]}\r\n                            profilepic={e[\"details\"][\"image\"]}\r\n                            nickname={e[\"details\"][\"name\"]}\r\n                          />\r\n                          <Divider />\r\n                        </>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {this.state.requests.length === 0 && (\r\n                    <>\r\n                      <Typography variant=\"body1\" style={{ padding: \"10px\" }}>\r\n                        Your friend requests will appear here :)\r\n                      </Typography>\r\n                      <img\r\n                        src={require(\"./friend-request.png\")}\r\n                        className=\"friendreq-illust\"\r\n                      />\r\n                    </>\r\n                  )}\r\n                </Paper>\r\n                <Hidden smUp>\r\n                  <Paper\r\n                    style={{\r\n                      margin: \"10px auto\",\r\n                      marginTop: \"20px auto\",\r\n                      height: \"auto\",\r\n                      padding: \"0px 6px\",\r\n                      maxWidth: \"400px\",\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{ paddingLeft: \"10px\", paddingBottom: \"10px\" }}\r\n                    >\r\n                      Suggestions\r\n                    </Typography>\r\n                    <Divider />\r\n                    {object[\"suggestions\"].map((e) => (\r\n                      <CardHead\r\n                        username={e[\"user\"][\"username\"]}\r\n                        nickname={e[\"name\"]}\r\n                        src={e[\"image\"]}\r\n                        owner={object[\"userdetails\"][\"user\"][\"username\"]}\r\n                      />\r\n                    ))}\r\n                  </Paper>\r\n                </Hidden>\r\n              </div>\r\n            </>\r\n          );\r\n        }}\r\n      </ContextApi.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FriendRequest;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n  Avatar,\r\n  AppBar,\r\n  Badge,\r\n  Toolbar,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport FavoriteOutlinedIcon from \"@material-ui/icons/FavoriteOutlined\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"./css/profile.css\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport { Context } from \"./contextapi\";\r\nimport UnfriendAlert from \"./unfriendalert\";\r\nimport { getToken, removeToken, getUsername } from \"./common\";\r\n\r\nclass BottomNav extends Component {\r\n  state = {\r\n    isopen: false,\r\n  };\r\n  handleLogOut = () => {\r\n    this.setState({ isopen: !this.state.isopen });\r\n  };\r\n  logoutUser = () => {\r\n    this.handleLogOut();\r\n    removeToken();\r\n    this.props.history.push(\"/register\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Context>\r\n        <ContextApi.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <>\r\n                <Grid\r\n                  container\r\n                  style={{ padding: \"10px 0px\", paddingLeft: \"20px\" }}\r\n                >\r\n                  <Grid item xs component={Link} to=\"/\">\r\n                    <HomeIcon style={{ color: \"black\" }} />\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs\r\n                    component={Link}\r\n                    to={`/profile/${getUsername()}`}\r\n                  >\r\n                    <Avatar\r\n                      style={{ width: \"24px\", height: \"24px\" }}\r\n                      src={`https://saiteja0413.pythonanywhere.com${object[\"userdetails\"][\"image\"]}`}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs component={Link} to=\"/add-post\">\r\n                    <AddBoxIcon style={{ color: \"black\" }} />\r\n                  </Grid>\r\n                  <Grid item xs component={Link} to=\"/friend-requests\">\r\n                    <Badge\r\n                      badgeContent={object[\"requests\"]}\r\n                      color=\"secondary\"\r\n                      fontSize=\"small\"\r\n                      max={10}\r\n                    >\r\n                      <FavoriteOutlinedIcon style={{ color: \"black\" }} />\r\n                    </Badge>\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <ExitToAppIcon\r\n                      style={{ color: \"black\" }}\r\n                      onClick={this.handleLogOut}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <UnfriendAlert\r\n                  open={this.state.isopen}\r\n                  handleClose={this.handleLogOut}\r\n                  image={object[\"userdetails\"][\"image\"]}\r\n                  username={object[\"userdetails\"][\"user\"][\"username\"]}\r\n                  logout={this.logoutUser}\r\n                  action=\"logout\"\r\n                />\r\n              </>\r\n            );\r\n          }}\r\n        </ContextApi.Consumer>\r\n      </Context>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BottomNav);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TextField,\r\n  Paper,\r\n  Button,\r\n  Collapse,\r\n  Typography,\r\n  Grid,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  InputAdornment,\r\n  Hidden,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { ContextApi } from \"./contextapi\";\r\nimport { setToken } from \"./common\";\r\nimport { AccountCircle, Lock } from \"@material-ui/icons\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport \"./css/route.css\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.usernameRef = new React.createRef();\r\n    this.emailRef = new React.createRef();\r\n    this.pass1Ref = new React.createRef();\r\n    this.pass2Ref = new React.createRef();\r\n    this.otpRef = new React.createRef();\r\n    this.recoverusernameRef = new React.createRef();\r\n    this.newOTPRef = new React.createRef();\r\n    this.newpassRef = new React.createRef();\r\n  }\r\n  state = {\r\n    isopen: false,\r\n    msg: \"\",\r\n    showpassword1: false,\r\n    showpassword2: false,\r\n    isopen2: false,\r\n    showpassword3: false,\r\n    isopen3: false,\r\n    activestep: 1,\r\n    username: \"\",\r\n    password: \"\",\r\n    registerusername: \"\",\r\n    pass1: \"\",\r\n    pass2: \"\",\r\n    email: \"\",\r\n    registerstep: 0,\r\n    otp: \"\",\r\n    loginstep: 0,\r\n    newotp: \"\",\r\n    recoverusername: \"\",\r\n  };\r\n  registerUser = () => {\r\n    if (this.pass1Ref.current.value !== this.pass2Ref.current.value) {\r\n      this.setState({ msg: \"passwords donot match\", isopen: true });\r\n    } else {\r\n      var body = {\r\n        username: this.usernameRef.current.value.toLowerCase(),\r\n        email: this.state.email,\r\n        password: this.pass1Ref.current.value,\r\n      };\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        `https://saiteja0413.pythonanywhere.com/api/register_user`,\r\n        true\r\n      );\r\n      xhr.onreadystatechange = () => {\r\n        if (xhr.readyState == 4 && xhr.status == 200) {\r\n          var res = JSON.parse(xhr.responseText);\r\n          console.log(res);\r\n          if (res[\"status\"][\"type\"] == \"success\") {\r\n            this.setState({ msg: \"Successfully registered\", isopen2: true });\r\n            this.setState({ activestep: 1 });\r\n          } else {\r\n            this.setState({\r\n              msg: \"A user with username already exists\",\r\n              isopen: true,\r\n            });\r\n          }\r\n        }\r\n      };\r\n      xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n      xhr.send(JSON.stringify(body));\r\n    }\r\n    this.disappearAlert();\r\n  };\r\n  loginuser = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    var body = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    xhr.open(\"POST\", `https://saiteja0413.pythonanywhere.com/api/login1`, true);\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        setToken(res[\"token\"], this.state.username.toLowerCase());\r\n        this.props.history.push(\"/\");\r\n      } else if (xhr.readyState == 4 && xhr.status == 400) {\r\n        this.setState({ msg: \"invalid username or password\", isopen3: true });\r\n        this.disappearAlert();\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.send(JSON.stringify(body));\r\n  };\r\n\r\n  disappearAlert = () => {\r\n    setTimeout(() => {\r\n      this.setState({ isopen: false, isopen2: false, isopen3: false });\r\n    }, 3000);\r\n  };\r\n\r\n  changetoLogin = () => {\r\n    this.setState({ activestep: 1 });\r\n  };\r\n  changetoSignUp = () => {\r\n    this.setState({ activestep: 0 });\r\n  };\r\n  checkEmail = () => {\r\n    if (!this.emailRef.current.value.includes(\"@gmail.com\")) {\r\n      this.setState({ msg: \"Incorrect Email\", isopen: true });\r\n    } else {\r\n      this.setState({ registerstep: 1 });\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"GET\",\r\n        `https://saiteja0413.pythonanywhere.com/api/send_otp${this.emailRef.current.value}`,\r\n        true\r\n      );\r\n      xhr.onreadystatechange = () => {\r\n        if (xhr.readyState == 4 && xhr.status == 200) {\r\n          var res = JSON.parse(xhr.responseText);\r\n\r\n          this.setState({ otp: res[\"otp\"] });\r\n        }\r\n      };\r\n      xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n      xhr.send();\r\n    }\r\n    this.disappearAlert();\r\n  };\r\n  verifyOTP = () => {\r\n    if (this.otpRef.current.value !== this.state.otp) {\r\n      this.setState({ msg: \"Incorrect OTP\", isopen: true });\r\n    } else {\r\n      this.setState({ registerstep: 2 });\r\n    }\r\n    this.disappearAlert();\r\n  };\r\n\r\n  //send otp during recover\r\n  sendOTP = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    this.setState({ recoverusername: this.recoverusernameRef.current.value });\r\n    xhr.open(\r\n      \"GET\",\r\n      `https://saiteja0413.pythonanywhere.com/api/recover_otp${this.recoverusernameRef.current.value}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        var res = JSON.parse(xhr.responseText);\r\n        if (res[\"status\"] == \"error\") {\r\n          this.setState({ msg: \"No user exists\", isopen3: true });\r\n        } else {\r\n          this.setState({ newotp: res[\"otp\"] });\r\n          this.setState({ loginstep: 2 });\r\n        }\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.send();\r\n    this.disappearAlert();\r\n  };\r\n\r\n  //verify the recover otp sent\r\n  verifyrecoverOTP = () => {\r\n    if (this.state.newotp !== this.newOTPRef.current.value) {\r\n      this.setState({ msg: \"Incorrect OTP\", isopen3: true });\r\n    } else {\r\n      this.setState({ loginstep: 3 });\r\n    }\r\n    this.disappearAlert();\r\n  };\r\n  changepassword = () => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      `https://saiteja0413.pythonanywhere.com/api/reset_pass${this.state.recoverusername}/${this.newpassRef.current.value}`,\r\n      true\r\n    );\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n      }\r\n    };\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.send();\r\n  };\r\n  render() {\r\n    return (\r\n      <Grid container justify=\"flex-start\" alignItems=\"center\">\r\n        <Grid item xs={12} sm={5} className=\"text-grid\">\r\n          <div className=\"textwrapper\">\r\n            <br />\r\n            <SwipeableViews\r\n              index={this.state.activestep}\r\n              className=\"text-swipable\"\r\n              enableMouseEvents\r\n              axis={\"y\"}\r\n              slideCount={2}\r\n              animateHeight\r\n            >\r\n              <div className=\"div1\">\r\n                <Typography variant=\"h4\" component=\"h4\">\r\n                  Hello Friend,\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                  Enter your personal details and start exploring new Friends\r\n                </Typography>\r\n              </div>\r\n              <div className=\"div2\">\r\n                <Typography variant=\"h4\">Welcome Back!</Typography>\r\n                <Typography variant=\"body1\">\r\n                  To keep connected with us please Login with your credentials\r\n                </Typography>\r\n              </div>\r\n            </SwipeableViews>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} sm className=\"grid2\">\r\n          <div className=\"wrapper\">\r\n            <Hidden xsDown>\r\n              <div className=\"title\">Instagram</div>\r\n            </Hidden>\r\n            <SwipeableViews\r\n              index={this.state.activestep}\r\n              enableMouseEvents\r\n              className=\"swipable\"\r\n            >\r\n              <Paper\r\n                style={{\r\n                  padding: \"14px\",\r\n\r\n                  textAlign: \"center\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                className=\"register-paper\"\r\n              >\r\n                <div className=\"register-title\">sign up</div>\r\n                <Stepper\r\n                  activeStep={this.state.registerstep}\r\n                  alternativeLabel\r\n                  style={{\r\n                    padding: 0,\r\n                  }}\r\n                >\r\n                  <Step style={{ fontSize: \"0.3rem\" }}>\r\n                    <StepLabel>Email</StepLabel>\r\n                  </Step>\r\n                  <Step>\r\n                    <StepLabel>verification</StepLabel>\r\n                  </Step>\r\n                  <Step>\r\n                    <StepLabel>submit</StepLabel>\r\n                  </Step>\r\n                </Stepper>\r\n                <Collapse in={this.state.isopen} style={{ margin: \"10px 0px\" }}>\r\n                  <Alert\r\n                    severity=\"error\"\r\n                    variant=\"filled\"\r\n                    style={{ padding: \"0 10px\" }}\r\n                  >\r\n                    <Typography variant=\"body2\"> {this.state.msg}</Typography>\r\n                  </Alert>\r\n                </Collapse>\r\n                <Collapse\r\n                  in={this.state.isopen2}\r\n                  style={{ margin: \"10px 0px\" }}\r\n                >\r\n                  <Alert\r\n                    severity=\"success\"\r\n                    variant=\"filled\"\r\n                    style={{ padding: \"0px 10px\" }}\r\n                  >\r\n                    <Typography variant=\"body2\"> {this.state.msg}</Typography>\r\n                  </Alert>\r\n                </Collapse>\r\n                {this.state.registerstep === 0 && (\r\n                  <TextField\r\n                    size=\"small\"\r\n                    variant=\"filled\"\r\n                    required\r\n                    value={this.state.email}\r\n                    label=\"email\"\r\n                    onChange={(e) => {\r\n                      this.setState({ email: e.target.value });\r\n                    }}\r\n                    inputRef={this.emailRef}\r\n                  />\r\n                )}\r\n                {this.state.registerstep === 1 && (\r\n                  <TextField\r\n                    label=\"OTP\"\r\n                    inputRef={this.otpRef}\r\n                    ssize=\"small\"\r\n                    variant=\"filled\"\r\n                  />\r\n                )}\r\n                {this.state.registerstep === 2 && (\r\n                  <>\r\n                    <TextField\r\n                      size=\"small\"\r\n                      variant=\"filled\"\r\n                      required\r\n                      label=\"username\"\r\n                      value={this.state.registerusername}\r\n                      onChange={(e) => {\r\n                        this.setState({ registerusername: e.target.value });\r\n                      }}\r\n                      inputRef={this.usernameRef}\r\n                      style={{\r\n                        margin: \"4px auto\",\r\n                        width: \"80%\",\r\n                        padding: 0,\r\n                        fontSize: \"0.3rem\",\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      size=\"small\"\r\n                      type={this.state.showpassword1 ? \"text\" : \"password\"}\r\n                      required\r\n                      value={this.state.pass1}\r\n                      variant=\"filled\"\r\n                      onChange={(e) => {\r\n                        this.setState({ pass1: e.target.value });\r\n                      }}\r\n                      label=\"password\"\r\n                      inputRef={this.pass1Ref}\r\n                      style={{ margin: \"4px auto\" }}\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              disableRipple\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  showpassword1: !this.state.showpassword1,\r\n                                });\r\n                              }}\r\n                            >\r\n                              {this.state.showpassword1 ? (\r\n                                <Visibility size=\"small\" />\r\n                              ) : (\r\n                                <VisibilityOff size=\"small\" />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      size=\"small\"\r\n                      type={this.state.showpassword2 ? \"text\" : \"password\"}\r\n                      required\r\n                      label=\"password2\"\r\n                      inputRef={this.pass2Ref}\r\n                      value={this.state.pass2}\r\n                      variant=\"filled\"\r\n                      style={{\r\n                        margin: \"4px auto\",\r\n                        marginLeft: \"auto\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        this.setState({ pass2: e.target.value });\r\n                      }}\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              disableRipple\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  showpassword2: !this.state.showpassword2,\r\n                                });\r\n                              }}\r\n                            >\r\n                              {this.state.showpassword2 ? (\r\n                                <Visibility />\r\n                              ) : (\r\n                                <VisibilityOff />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />{\" \"}\r\n                  </>\r\n                )}\r\n                <br />\r\n                <br />\r\n                {this.state.registerstep !== 0 && (\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        registerstep: this.state.registerstep - 1,\r\n                      });\r\n                    }}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n                {this.state.registerstep === 0 && (\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      this.checkEmail();\r\n                    }}\r\n                  >\r\n                    submit\r\n                  </Button>\r\n                )}\r\n                {this.state.registerstep == 1 && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      this.verifyOTP();\r\n                    }}\r\n                  >\r\n                    Verify\r\n                  </Button>\r\n                )}\r\n                {this.state.registerstep === 2 && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      this.registerUser();\r\n                    }}\r\n                    disabled={\r\n                      this.state.registerusername === \"\" ||\r\n                      this.state.pass1 === \"\" ||\r\n                      this.state.pass2 === \"\"\r\n                    }\r\n                  >\r\n                    Sign Up\r\n                  </Button>\r\n                )}\r\n                <br />\r\n                <br />\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  Already have an Account?{\" \"}\r\n                  <span\r\n                    onClick={() => {\r\n                      this.changetoLogin();\r\n                    }}\r\n                    style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                  >\r\n                    <b> login </b>{\" \"}\r\n                  </span>\r\n                </Typography>\r\n                <br />\r\n              </Paper>\r\n              <div className=\"paper2\">\r\n                <Paper className=\"paper2-form\">\r\n                  <div className=\"login-title\">Login</div>\r\n                  <Collapse\r\n                    in={this.state.isopen3}\r\n                    style={{ margin: \"10px 0px\" }}\r\n                  >\r\n                    <Alert\r\n                      severity=\"error\"\r\n                      variant=\"filled\"\r\n                      style={{ padding: \"0px 10px\" }}\r\n                    >\r\n                      <Typography variant=\"body2\"> {this.state.msg}</Typography>\r\n                    </Alert>\r\n                  </Collapse>\r\n                  <div className=\"paper2-inputs\">\r\n                    {this.state.loginstep == 0 && (\r\n                      <>\r\n                        <Grid\r\n                          container\r\n                          spacing={1}\r\n                          alignContent=\"center\"\r\n                          justify=\"center\"\r\n                          alignItems=\"flex-end\"\r\n                        >\r\n                          <Grid item xs={2}>\r\n                            <AccountCircle size=\"small\" />\r\n                          </Grid>\r\n                          <Grid item xs>\r\n                            <TextField\r\n                              size=\"small\"\r\n                              required\r\n                              label=\"username\"\r\n                              onChange={(e) => {\r\n                                this.setState({ username: e.target.value });\r\n                              }}\r\n                              style={{ margin: \"4px auto\", width: \"100%\" }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid\r\n                          container\r\n                          spacing={2}\r\n                          alignContent=\"center\"\r\n                          justify=\"center\"\r\n                          alignItems=\"flex-end\"\r\n                        >\r\n                          <Grid item xs={2}>\r\n                            <Lock size=\"small\" />\r\n                          </Grid>\r\n                          <Grid item xs>\r\n                            <TextField\r\n                              size=\"small\"\r\n                              type={\r\n                                this.state.showpassword3 ? \"text\" : \"password\"\r\n                              }\r\n                              required\r\n                              label=\"password\"\r\n                              onChange={(e) => {\r\n                                this.setState({ password: e.target.value });\r\n                              }}\r\n                              InputProps={{\r\n                                endAdornment: (\r\n                                  <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                      disableRipple\r\n                                      onClick={() => {\r\n                                        this.setState({\r\n                                          showpassword3: !this.state\r\n                                            .showpassword3,\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      {this.state.showpassword3 ? (\r\n                                        <Visibility size=\"small\" />\r\n                                      ) : (\r\n                                        <VisibilityOff size=\"small\" />\r\n                                      )}\r\n                                    </IconButton>\r\n                                  </InputAdornment>\r\n                                ),\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                        <br />\r\n                        <Typography\r\n                          variant=\"subtitle2\"\r\n                          onClick={() => {\r\n                            this.setState({ loginstep: 1 });\r\n                          }}\r\n                          style={{ cursor: \"pointer\", fontWeight: \"bold\" }}\r\n                        >\r\n                          Forgot password?\r\n                        </Typography>\r\n                      </>\r\n                    )}\r\n                    {this.state.loginstep == 1 && (\r\n                      <>\r\n                        <TextField\r\n                          inputRef={this.recoverusernameRef}\r\n                          variant=\"outlined\"\r\n                          label=\"Username\"\r\n                          size=\"small\"\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <Button\r\n                          onClick={() => {\r\n                            this.setState({ loginstep: 0 });\r\n                          }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          color=\"secondary\"\r\n                        >\r\n                          {\" \"}\r\n                          Cancel{\" \"}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          onClick={() => {\r\n                            this.sendOTP();\r\n                          }}\r\n                          color=\"primary\"\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </>\r\n                    )}\r\n                    {this.state.loginstep === 2 && (\r\n                      <>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          inputRef={this.newOTPRef}\r\n                          label=\"OTP\"\r\n                          helperText=\"Enter the OTP we have sent to your Gmail\"\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <Button\r\n                          onClick={() => {\r\n                            this.setState({ loginstep: 0 });\r\n                          }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          color=\"secondary\"\r\n                        >\r\n                          {\" \"}\r\n                          Cancel{\" \"}\r\n                        </Button>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          onClick={() => {\r\n                            this.verifyrecoverOTP();\r\n                          }}\r\n                        >\r\n                          verify\r\n                        </Button>\r\n                      </>\r\n                    )}\r\n\r\n                    {this.state.loginstep === 3 && (\r\n                      <>\r\n                        <TextField\r\n                          type=\"password\"\r\n                          inputRef={this.newpassRef}\r\n                          size=\"small\"\r\n                          variant=\"contained\"\r\n                          label=\"New Password\"\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          onClick={() => {\r\n                            this.changepassword();\r\n                            this.setState({ loginstep: 0 });\r\n                          }}\r\n                          color=\"primary\"\r\n                        >\r\n                          confirm{\" \"}\r\n                        </Button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n\r\n                  <br />\r\n                  <Typography variant=\"body2\">\r\n                    Don't have an account? No problem,{\" \"}\r\n                    <b>\r\n                      <span\r\n                        onClick={() => {\r\n                          this.changetoSignUp();\r\n                        }}\r\n                        style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                      >\r\n                        signup!\r\n                      </span>\r\n                    </b>\r\n                  </Typography>\r\n                  <br />\r\n                  {this.state.loginstep === 0 && (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        this.loginuser();\r\n                      }}\r\n                      disabled={\r\n                        this.state.username === \"\" || this.state.password === \"\"\r\n                      }\r\n                    >\r\n                      login\r\n                    </Button>\r\n                  )}\r\n                </Paper>\r\n              </div>\r\n            </SwipeableViews>\r\n          </div>\r\n          <Typography className=\"love-by-saiteja\" variant=\"body1\">\r\n            Made with <Favorite fontSize=\"small\" color=\"secondary\" /> by Saiteja\r\n            Balla\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Register);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport AppNav from \"./Nav\";\r\nimport Home from \"./home\";\r\nimport \"./css/route.css\";\r\nimport Profile from \"./profile.jsx\";\r\nimport UploadPost from \"./uploadpost\";\r\nimport FriendRequest from \"./friendrequests\";\r\nimport {\r\n  BottomNavigation,\r\n  Hidden,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport BottomNav from \"./bottomnav\";\r\nimport { Context } from \"./contextapi\";\r\nimport PostImageFull from \"./postimagefull\";\r\nimport Register from \"./register\";\r\nimport { getToken } from \"./common\";\r\n\r\nclass Routing extends Component {\r\n  state = {\r\n    userimage: \"\",\r\n  };\r\n  componentDidMount = () => {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Hidden xsDown>\r\n          <Context>\r\n            <Router basename={window.location.pathname || \"\"}>\r\n              <Route\r\n                path=\"/register\"\r\n                render={(props) =>\r\n                  getToken() === null ? (\r\n                    <Register {...props} />\r\n                  ) : (\r\n                    <Redirect push to=\"/\" />\r\n                  )\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/\"\r\n                exact\r\n                render={(props) =>\r\n                  getToken() !== null ? (\r\n                    <>\r\n                      <AppNav />\r\n                      <Home {...props} />\r\n                    </>\r\n                  ) : (\r\n                    <Redirect push to=\"/register\" />\r\n                  )\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/profile/:username\"\r\n                exact\r\n                render={(props) =>\r\n                  getToken() !== null ? (\r\n                    <>\r\n                      <AppNav />\r\n                      <Profile key={props.match.params.username} {...props} />\r\n                    </>\r\n                  ) : (\r\n                    <Redirect push to=\"/register\" />\r\n                  )\r\n                }\r\n              ></Route>\r\n              <Route\r\n                path=\"/otheruser/:username\"\r\n                exact\r\n                render={(props) =>\r\n                  getToken() !== null ? (\r\n                    <>\r\n                      <AppNav />\r\n                      <Profile key={props.match.params.username} {...props} />\r\n                    </>\r\n                  ) : (\r\n                    <Redirect push to=\"/register\" />\r\n                  )\r\n                }\r\n              ></Route>\r\n              <Route\r\n                path=\"/add-post\"\r\n                exact\r\n                render={(props) =>\r\n                  getToken() !== null ? (\r\n                    <>\r\n                      <AppNav />\r\n                      <UploadPost {...props} />\r\n                    </>\r\n                  ) : (\r\n                    <Redirect push to=\"/register\" />\r\n                  )\r\n                }\r\n              ></Route>\r\n              <Route\r\n                path=\"/friend-requests\"\r\n                exact\r\n                render={(props) =>\r\n                  getToken() !== null ? (\r\n                    <>\r\n                      <AppNav />\r\n                      <FriendRequest {...props} />\r\n                    </>\r\n                  ) : (\r\n                    <Redirect push to=\"/register\" />\r\n                  )\r\n                }\r\n              ></Route>{\" \"}\r\n            </Router>\r\n          </Context>\r\n        </Hidden>\r\n\r\n        <Hidden smUp>\r\n          <Router basename={window.location.pathname || \"\"}>\r\n            <Context>\r\n              <Grid container direction=\"column\">\r\n                <Grid\r\n                  item\r\n                  xs={2}\r\n                  style={{\r\n                    position: \"sticky\",\r\n                    minWidth: \"100%\",\r\n                    zIndex: \"100\",\r\n                  }}\r\n                >\r\n                  <AppNav />\r\n                </Grid>\r\n\r\n                <Route\r\n                  path=\"/register\"\r\n                  render={(props) =>\r\n                    getToken() === null ? (\r\n                      <Register {...props} />\r\n                    ) : (\r\n                      <Redirect push to=\"/\" />\r\n                    )\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/\"\r\n                  exact\r\n                  render={(props) =>\r\n                    getToken() !== null ? (\r\n                      <>\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            minWidth: \"100%\",\r\n                            height: \"80vh\",\r\n                            alignItems: \"center\",\r\n                            overflow: \"scroll\",\r\n                          }}\r\n                        >\r\n                          <Home {...props} />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            minWidth: \"100%\",\r\n                            position: \"fixed \",\r\n                            bottom: 0,\r\n                          }}\r\n                        >\r\n                          <BottomNav />\r\n                        </Grid>\r\n                      </>\r\n                    ) : (\r\n                      <Redirect push to=\"/register\" />\r\n                    )\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/profile/:username\"\r\n                  exact\r\n                  render={(props) =>\r\n                    getToken() !== null ? (\r\n                      <>\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            minWidth: \"100%\",\r\n                            height: \"80vh\",\r\n                            alignItems: \"center\",\r\n                            overflow: \"scroll\",\r\n                          }}\r\n                        >\r\n                          <Profile\r\n                            key={props.match.params.username}\r\n                            {...props}\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            minWidth: \"100%\",\r\n                            position: \"fixed \",\r\n                            bottom: 0,\r\n                          }}\r\n                        >\r\n                          <BottomNav />\r\n                        </Grid>\r\n                      </>\r\n                    ) : (\r\n                      <Redirect push to=\"/register\" />\r\n                    )\r\n                  }\r\n                ></Route>\r\n                <Route\r\n                  path=\"/otheruser/:username\"\r\n                  exact\r\n                  render={(props) =>\r\n                    getToken() !== null ? (\r\n                      <>\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            minWidth: \"100%\",\r\n                            height: \"80vh\",\r\n                            alignItems: \"center\",\r\n                            overflow: \"scroll\",\r\n                          }}\r\n                        >\r\n                          <Profile\r\n                            key={props.match.params.username}\r\n                            {...props}\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            minWidth: \"100%\",\r\n                            position: \"fixed \",\r\n                            bottom: 0,\r\n                          }}\r\n                        >\r\n                          <BottomNav />\r\n                        </Grid>\r\n                      </>\r\n                    ) : (\r\n                      <Redirect push to=\"/register\" />\r\n                    )\r\n                  }\r\n                ></Route>\r\n                <Route\r\n                  path=\"/add-post\"\r\n                  exact\r\n                  render={(props) =>\r\n                    getToken() !== null ? (\r\n                      <>\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            minWidth: \"100%\",\r\n                            height: \"80vh\",\r\n                            alignItems: \"center\",\r\n                            overflow: \"scroll\",\r\n                          }}\r\n                        >\r\n                          <UploadPost {...props} />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            minWidth: \"100%\",\r\n                            position: \"fixed \",\r\n                            bottom: 0,\r\n                          }}\r\n                        >\r\n                          <BottomNav />\r\n                        </Grid>\r\n                      </>\r\n                    ) : (\r\n                      <Redirect push to=\"/register\" />\r\n                    )\r\n                  }\r\n                ></Route>\r\n                <Route\r\n                  path=\"/friend-requests\"\r\n                  exact\r\n                  render={(props) =>\r\n                    getToken() !== null ? (\r\n                      <>\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            minWidth: \"100%\",\r\n                            height: \"80vh\",\r\n                            alignItems: \"center\",\r\n                            overflow: \"scroll\",\r\n                          }}\r\n                        >\r\n                          <FriendRequest {...props} />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            minWidth: \"100%\",\r\n                            position: \"fixed \",\r\n                            bottom: 0,\r\n                          }}\r\n                        >\r\n                          <BottomNav />\r\n                        </Grid>\r\n                      </>\r\n                    ) : (\r\n                      <Redirect push to=\"/register\" />\r\n                    )\r\n                  }\r\n                ></Route>\r\n              </Grid>\r\n            </Context>\r\n          </Router>\r\n        </Hidden>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routing;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routing from \"./instaclone/route\";\r\nReactDOM.render(<Routing />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}